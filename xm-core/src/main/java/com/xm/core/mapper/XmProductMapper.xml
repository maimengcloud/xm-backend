<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.mapper.XmProductMapper">

    <select id="selectListMapByWhere" resultType="HashMap">
        select * from xm_product res
        <if test="ext.linkProjectId !=null and ext.linkProjectId!=''">
            inner join xm_product_project_link ppl on res.id=ppl.product_id and ext.ppl.project_id=#{ext.linkProjectId}
        </if>
        <where>
            ${@com.mdp.Util@trimWhere(ew.customSqlSegment)}
            <!--下面可以添加更多查询条件，正常的if 条件都是支持的-->

        </where>

        <!--下面双引号内可以添加默认排序，如果前端没有上传排序，将使用引号内的排序规则-->
        ${@com.mdp.Util@trimOrderBy(ew.customSqlSegment,'')}
        <!--下面双引号内可以添加默认分组，如果前端没有上传分组，将使用引号内的分组规则-->
        ${@com.mdp.Util@trimGroupBy(ew.customSqlSegment,'')}
        <if test="ext.linkProjectId !=null and ext.linkProjectId!=''">
            order by ppl.seq asc
        </if>
    </select>
    <sql id="whereForMap"> 
        <if test="ext.key != null and ext.key !='' ">   and ext.res.product_name like concat('%',#{ext.key} ,'%')   </if>
        <if test="ext.linkIterationId !=null and ext.linkIterationId!=''">
            and ext.exists( select 1 from  xm_iteration  ppl where   ppl.product_id=res.id and ext.ppl.id=#{ext.linkIterationId} )
        </if>
        <if test="ext.compete !=null and ext.compete!=''">
            and ext.( exists ( select 1 from xm_group_user gu inner join xm_product_project_link t on (gu.project_id=t.project_id or gu.product_id=t.product_id ) and ext.t.product_id=res.id where gu.userid=#{ext.compete} and ext.t.product_id=res.id )
            or res.pm_userid=#{ext.compete} or res.adm_userid=#{ext.compete} or res.ass_userid=#{ext.compete}
            )
        </if>
        <if test="ext.ctimeStart!=null and ext.ctimeEnd!=null ">and ext.ctime between #{ext.ctimeStart} and ext.#{ext.ctimeEnd}</if>
        <if test="ext.isTpl!=null and ext.isTpl=='1'">
            and ext.(res.branch_id in( #{ext.platformBranchId},#{ext.linkBranchId}) and ext.res.is_tpl='1')
        </if>
        <if test="ext.del==null or del==''">
            and ext.res.del!="1"
        </if>
        <if test="ext.linkBranchId!=null and ext.linkBranchId!=''">
            and ext.( res.branch_id = #{ext.linkBranchId}
            <if test="ext.isTpl!=null and ext.isTpl=='1'">
                or (res.branch_id in( #{ext.platformBranchId},#{ext.linkBranchId}) and ext.res.is_tpl='1')
            </if>
            )

        </if>
    </sql>

    <select id="selectListMapByWhereWithState" parameterType="HashMap" resultType="HashMap">
        select res.*,s.* from xm_product res left join xm_product_state s on res.id=s.product_id
        <if test="ext.linkProjectId !=null and ext.linkProjectId!=''">
            inner join xm_product_project_link ppl on res.id=ppl.product_id and ext.ppl.project_id=#{ext.linkProjectId}
        </if>
        <where>
            <include refid="whereForMap"/> 
        </where>
        <if test="ext.linkProjectId !=null and ext.linkProjectId!=''">
            order by ppl.seq asc
        </if>
    </select> 
</mapper>