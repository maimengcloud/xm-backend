<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.mapper.XmBudgetLaborMapper">

    <select id="selectListMapByWhere" resultType="HashMap">
        select * from xm_budget_labor res
        <where>
            ${@com.mdp.Util@trimWhere(ew.customSqlSegment)}
            <!--下面可以添加更多查询条件，正常的if 条件都是支持的-->

        </where>
        <!--下面双引号内可以添加默认排序，如果前端没有上传排序，将使用引号内的排序规则-->
        ${@com.mdp.Util@trimOrderBy(ew.customSqlSegment,'')}
        <!--下面双引号内可以添加默认分组，如果前端没有上传分组，将使用引号内的分组规则-->
        ${@com.mdp.Util@trimGroupBy(ew.customSqlSegment,'')}
    </select>
    <!-- 通过条件查询获取数据列表 返回list<map> -->
    <select id="listSum" parameterType="HashMap" resultType="HashMap">
        select res.project_id,res.userid,res.username,subject_id,subject_name,biz_month,sum(res.budget_at) as budget_at from  xm_budget_labor res
        <where>
            and res.project_id=#{projectId}
            <if test="subjectId != null and subjectId !='' ">     and res.subject_id =#{subjectId} </if>
            <if test="costType != null and costType !='' ">     and res.cost_type =#{costType} </if>
        </where>
        group by res.project_id,res.userid,res.username,subject_id,subject_name,biz_month
    </select>

    <!-- 查询人力的预算及对应的项目的预算，人力总预算不能大于项目人力总预算 -->
    <select id="selectTotalProjectAndUserBudgetCost" parameterType="HashMap" resultType="HashMap">
        SELECT
        sum( case when res.cost_type='1' then ifnull(res.budget_at,0) else 0 end ) AS budget_iuser_at,
        sum( case when res.cost_type='2' then ifnull(res.budget_at,0) else 0 end ) AS budget_ouser_at,
        sum(  ifnull(res.budget_at,0)   ) AS budget_at,
        p.plan_nouser_at,
        p.plan_iuser_at,
        p.plan_ouser_at,
        p.locked,
        p.plan_workload,
        p.total_receivables,
        p.budget_margin_rate,
        p.contract_amt,
        p.plan_iuser_price,
        p.plan_ouser_price,
        p.plan_ouser_cnt,
        p.plan_iuser_cnt,
        p.plan_working_hours
        FROM
        XM.xm_project p
        LEFT JOIN xm_budget_labor res ON p.id = res.project_id
        <where>
            p.id = #{projectId}
            <if test=" excludeIds !=null "> and res.id not in
                <foreach collection="excludeIds" item="item" index="index" open="(" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
</mapper>