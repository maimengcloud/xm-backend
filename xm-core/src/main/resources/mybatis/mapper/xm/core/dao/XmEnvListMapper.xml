<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmEnvList">
	
	
	<!--开始 自定sql函数区域 请在此区域添加自定义函数,其它区域尽量不要动，因为代码随时重新生成 -->

    <sql id="whereForMap">
         <if test=" ids != null">  and (res.id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
         </if>
        <if test="key != null and key !='' ">       </if>
		<if test="fuzzy != null and fuzzy != ''">
			and (res.ip_address like #{fuzzy} or res.web_ip_address like #{fuzzy} or res.access_url like #{fuzzy})
		</if>
		<if test="linkProductId!=null and linkProductId!=''">
			and exists( select 1 from xm_product_project_link l where l.product_id=#{linkProductId} and l.project_id=res.project_id)
		</if>
		and ((res.create_userid=#{userid} and res.read_qx='9') or (res.branch_id=#{branchId} and res.read_qx='1') or res.read_qx in ('0','2'))
    </sql>


	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_env_list res
		<where>
		    <include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmEnvList" resultType="com.xm.core.entity.XmEnvList">
		select * from xm_env_list res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmEnvList" resultType="com.xm.core.entity.XmEnvList">
		select * from xm_env_list res
		where 
			res.id = #{id}
	</select>
    <select id="selectListByIds" parameterType="List" resultType="com.xm.core.entity.XmEnvList">
        select * from xm_env_list res
        where  (res.id) in
             <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
    </select>
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_env_list res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmEnvList" resultType="long">
		select count(*) from xm_env_list res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmEnvList" useGeneratedKeys="false"   keyProperty="id">
		insert into xm_env_list(
			<include refid="columns"/>
		) values (
		#{id},#{remark},#{ipAddress},#{port},#{branchId},#{accessUserid},#{accessPassword},#{accessUrl},#{supplier},#{webIpAddress},#{webPort},#{createUserid},#{createUsername},#{createTime},#{envState},#{startTime},#{endTime},#{feeAmount},#{feeRule},#{projectId},#{readQx},#{writeQx},#{ltime},#{luserid},#{lusername},#{name}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmEnvList">
		delete from xm_env_list res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmEnvList">
		delete from xm_env_list 
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmEnvList">
		update  xm_env_list 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmEnvList">
		update  xm_env_list 
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_env_list 
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>

	<!-- 批量修改某几个字段 -->
	<delete id="editSomeFields" parameterType="HashMap">
		update  xm_env_list
        <set>
            <include refid="someFieldSet"/>
        </set>
        where  (id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
	</delete>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_env_list 
			where
			(id) in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    (  #{item.id} )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,remark,ip_address,port,branch_id,access_userid,access_password,access_url,supplier,web_ip_address,web_port,create_userid,create_username,create_time,env_state,start_time,end_time,fee_amount,fee_rule,project_id,read_qx,write_qx,ltime,luserid,lusername,name
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="remark != null and remark != ''">      and res.remark = #{remark}     </if>
		<if test="ipAddress != null and ipAddress != ''">      and res.ip_address = #{ipAddress}     </if>
		<if test="port != null and port != ''">      and res.port = #{port}     </if>
		<if test="branchId != null and branchId != ''">      and res.branch_id = #{branchId}     </if>
		<if test="accessUserid != null and accessUserid != ''">      and res.access_userid = #{accessUserid}     </if>
		<if test="accessPassword != null and accessPassword != ''">      and res.access_password = #{accessPassword}     </if>
		<if test="accessUrl != null and accessUrl != ''">      and res.access_url = #{accessUrl}     </if>
		<if test="supplier != null and supplier != ''">      and res.supplier = #{supplier}     </if>
		<if test="webIpAddress != null and webIpAddress != ''">      and res.web_ip_address = #{webIpAddress}     </if>
		<if test="webPort != null and webPort != ''">      and res.web_port = #{webPort}     </if>
		<if test="createUserid != null and createUserid != ''">      and res.create_userid = #{createUserid}     </if>
		<if test="createUsername != null and createUsername != ''">      and res.create_username = #{createUsername}     </if>
		<if test="createTime != null">      and date_format(res.create_time,'%Y-%m-%d') = date_format(#{createTime},'%Y-%m-%d')     </if>
		<if test="envState != null and envState != ''">      and res.env_state = #{envState}     </if>
		<if test="startTime != null">      and date_format(res.start_time,'%Y-%m-%d') = date_format(#{startTime},'%Y-%m-%d')     </if>
		<if test="endTime != null">      and date_format(res.end_time,'%Y-%m-%d') = date_format(#{endTime},'%Y-%m-%d')     </if>
		<if test="feeAmount != null and feeAmount != ''">      and res.fee_amount = #{feeAmount}     </if>
		<if test="feeRule != null and feeRule != ''">      and res.fee_rule = #{feeRule}     </if>
		<if test="projectId != null and projectId != ''">      and res.project_id = #{projectId}     </if>
		<if test="readQx != null and readQx != ''">      and res.read_qx = #{readQx}     </if>
		<if test="writeQx != null and writeQx != ''">      and res.write_qx = #{writeQx}     </if>
		<if test="ltime != null">      and date_format(res.ltime,'%Y-%m-%d') = date_format(#{ltime},'%Y-%m-%d')     </if>
		<if test="luserid != null and luserid != ''">      and res.luserid = #{luserid}     </if>
		<if test="lusername != null and lusername != ''">      and res.lusername = #{lusername}     </if>
		<if test="name != null and name != ''">      and res.name = #{name}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		remark = #{remark},
		ip_address = #{ipAddress},
		port = #{port},
		branch_id = #{branchId},
		access_userid = #{accessUserid},
		access_password = #{accessPassword},
		access_url = #{accessUrl},
		supplier = #{supplier},
		web_ip_address = #{webIpAddress},
		web_port = #{webPort},
		create_userid = #{createUserid},
		create_username = #{createUsername},
		create_time = #{createTime},
		env_state = #{envState},
		start_time = #{startTime},
		end_time = #{endTime},
		fee_amount = #{feeAmount},
		fee_rule = #{feeRule},
		project_id = #{projectId},
		read_qx = #{readQx},
		write_qx = #{writeQx},
		ltime = #{ltime},
		luserid = #{luserid},
		lusername = #{lusername},
		name = #{name}
	</sql>
	<sql id="someFieldSet">
		<if test="remark != null and remark != ''"> remark = #{remark},     </if>
		<if test="ipAddress != null and ipAddress != ''"> ip_address = #{ipAddress},     </if>
		<if test="port != null and port != ''"> port = #{port},     </if>
		<if test="branchId != null and branchId != ''"> branch_id = #{branchId},     </if>
		<if test="accessUserid != null and accessUserid != ''"> access_userid = #{accessUserid},     </if>
		<if test="accessPassword != null and accessPassword != ''"> access_password = #{accessPassword},     </if>
		<if test="accessUrl != null and accessUrl != ''"> access_url = #{accessUrl},     </if>
		<if test="supplier != null and supplier != ''"> supplier = #{supplier},     </if>
		<if test="webIpAddress != null and webIpAddress != ''"> web_ip_address = #{webIpAddress},     </if>
		<if test="webPort != null and webPort != ''"> web_port = #{webPort},     </if>
		<if test="createUserid != null and createUserid != ''"> create_userid = #{createUserid},     </if>
		<if test="createUsername != null and createUsername != ''"> create_username = #{createUsername},     </if>
		<if test="createTime != null"> create_time = #{createTime},     </if>
		<if test="envState != null and envState != ''"> env_state = #{envState},     </if>
		<if test="startTime != null"> start_time = #{startTime},     </if>
		<if test="endTime != null"> end_time = #{endTime},     </if>
		<if test="feeAmount != null and feeAmount != ''"> fee_amount = #{feeAmount},     </if>
		<if test="feeRule != null and feeRule != ''"> fee_rule = #{feeRule},     </if>
		<if test="projectId != null and projectId != ''"> project_id = #{projectId},     </if>
		<if test="readQx != null and readQx != ''"> read_qx = #{readQx},     </if>
		<if test="writeQx != null and writeQx != ''"> write_qx = #{writeQx},     </if>
		<if test="ltime != null"> ltime = #{ltime},     </if>
		<if test="luserid != null and luserid != ''"> luserid = #{luserid},     </if>
		<if test="lusername != null and lusername != ''"> lusername = #{lusername},     </if>
		<if test="name != null and name != ''"> name = #{name},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			remark = #{item.remark},
			ip_address = #{item.ipAddress},
			port = #{item.port},
			branch_id = #{item.branchId},
			access_userid = #{item.accessUserid},
			access_password = #{item.accessPassword},
			access_url = #{item.accessUrl},
			supplier = #{item.supplier},
			web_ip_address = #{item.webIpAddress},
			web_port = #{item.webPort},
			create_userid = #{item.createUserid},
			create_username = #{item.createUsername},
			create_time = #{item.createTime},
			env_state = #{item.envState},
			start_time = #{item.startTime},
			end_time = #{item.endTime},
			fee_amount = #{item.feeAmount},
			fee_rule = #{item.feeRule},
			project_id = #{item.projectId},
			read_qx = #{item.readQx},
			write_qx = #{item.writeQx},
			ltime = #{item.ltime},
			luserid = #{item.luserid},
			lusername = #{item.lusername},
			name = #{item.name}
	</sql>
</mapper>