<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmTaskTemplate">
	
	
	<!--开始 自定sql函数区域 -->
		<!--请在此区域添加自定义函数-->
		
		
		
	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from XM.xm_task_template res
		<where> 
			<if test="ids != null">  and     
				id in
				    <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >  
				        #{item}  
				    </foreach>  
			 </if>
			<include refid="where"/>
			<if test="key != null and key !='' ">       </if> 
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmTaskTemplate" resultType="com.xm.core.entity.XmTaskTemplate">
		select * from XM.xm_task_template res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmTaskTemplate" resultType="com.xm.core.entity.XmTaskTemplate">
		select * from XM.xm_task_template res
		where 
			res.id = #{id}
	</select>
	
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from XM.xm_task_template res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmTaskTemplate" resultType="long">
		select count(1) from XM.xm_task_template res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmTaskTemplate" useGeneratedKeys="false" keyProperty="id">
		insert into XM.xm_task_template(
			<include refid="columns"/>
		) values (
		#{id},#{name},#{parentTaskid},#{parentTaskname},#{projectId},#{projectName},#{level},#{sortLevel},#{preTaskid},#{preTaskname},#{startTime},#{endTime},#{milestone},#{description},#{remarks},#{createUserid},#{createUsername},#{createTime},#{rate},#{budgetCost},#{budgetWorkload},#{taskState},#{taskType},#{taskClass},#{toTaskCenter},#{projectPhaseId},#{projectPhaseName},#{taskSkillNames},#{taskSkillIds},#{taskOut},#{planType},#{settleSchemel},#{menuId},#{menuName}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmTaskTemplate">
		delete from XM.xm_task_template res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmTaskTemplate">
		delete from XM.xm_task_template 
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmTaskTemplate">
		update  XM.xm_task_template 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmTaskTemplate">
		update  XM.xm_task_template 
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  XM.xm_task_template 
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from XM.xm_task_template 
			where id in
			    <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >  
			        #{item.id }  
			    </foreach>  
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,name,parent_taskid,parent_taskname,project_id,project_name,level,sort_level,pre_taskid,pre_taskname,start_time,end_time,milestone,description,remarks,create_userid,create_username,create_time,rate,budget_cost,budget_workload,task_state,task_type,task_class,to_task_center,project_phase_id,project_phase_name,task_skill_names,task_skill_ids,task_out,plan_type,settle_schemel,menu_id,menu_name
	</sql>
	
	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="name != null and name != ''">      and res.name = #{name}     </if>
		<if test="parentTaskid != null and parentTaskid != ''">      and res.parent_taskid = #{parentTaskid}     </if>
		<if test="parentTaskname != null and parentTaskname != ''">      and res.parent_taskname = #{parentTaskname}     </if>
		<if test="projectId != null and projectId != ''">      and res.project_id = #{projectId}     </if>
		<if test="projectName != null and projectName != ''">      and res.project_name = #{projectName}     </if>
		<if test="level != null and level != ''">      and res.level = #{level}     </if>
		<if test="sortLevel != null and sortLevel != ''">      and res.sort_level = #{sortLevel}     </if>
		<if test="preTaskid != null and preTaskid != ''">      and res.pre_taskid = #{preTaskid}     </if>
		<if test="preTaskname != null and preTaskname != ''">      and res.pre_taskname = #{preTaskname}     </if>
		<if test="startTime != null">      and TO_CHAR(res.start_time,'YYYY-MM-DD') = TO_CHAR(#{startTime},'YYYY-MM-DD')     </if>
		<if test="endTime != null">      and TO_CHAR(res.end_time,'YYYY-MM-DD') = TO_CHAR(#{endTime},'YYYY-MM-DD')     </if>
		<if test="milestone != null and milestone != ''">      and res.milestone = #{milestone}     </if>
		<if test="description != null and description != ''">      and res.description = #{description}     </if>
		<if test="remarks != null and remarks != ''">      and res.remarks = #{remarks}     </if>
		<if test="createUserid != null and createUserid != ''">      and res.create_userid = #{createUserid}     </if>
		<if test="createUsername != null and createUsername != ''">      and res.create_username = #{createUsername}     </if>
		<if test="createTime != null">      and TO_CHAR(res.create_time,'YYYY-MM-DD') = TO_CHAR(#{createTime},'YYYY-MM-DD')     </if>
		<if test="rate != null and rate != ''">      and res.rate = #{rate}     </if>
		<if test="budgetCost != null and budgetCost != ''">      and res.budget_cost = #{budgetCost}     </if>
		<if test="budgetWorkload != null and budgetWorkload != ''">      and res.budget_workload = #{budgetWorkload}     </if>
		<if test="taskState != null and taskState != ''">      and res.task_state = #{taskState}     </if>
		<if test="taskType != null and taskType != ''">      and res.task_type = #{taskType}     </if>
		<if test="taskClass != null and taskClass != ''">      and res.task_class = #{taskClass}     </if>
		<if test="toTaskCenter != null and toTaskCenter != ''">      and res.to_task_center = #{toTaskCenter}     </if>
		<if test="projectPhaseId != null and projectPhaseId != ''">      and res.project_phase_id = #{projectPhaseId}     </if>
		<if test="projectPhaseName != null and projectPhaseName != ''">      and res.project_phase_name = #{projectPhaseName}     </if>
		<if test="taskSkillNames != null and taskSkillNames != ''">      and res.task_skill_names = #{taskSkillNames}     </if>
		<if test="taskSkillIds != null and taskSkillIds != ''">      and res.task_skill_ids = #{taskSkillIds}     </if>
		<if test="taskOut != null and taskOut != ''">      and res.task_out = #{taskOut}     </if>
		<if test="planType != null and planType != ''">      and res.plan_type = #{planType}     </if>
		<if test="settleSchemel != null and settleSchemel != ''">      and res.settle_schemel = #{settleSchemel}     </if>
		<if test="menuId != null and menuId != ''">      and res.menu_id = #{menuId}     </if>
		<if test="menuName != null and menuName != ''">      and res.menu_name = #{menuName}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		name = #{name},
		parent_taskid = #{parentTaskid},
		parent_taskname = #{parentTaskname},
		project_id = #{projectId},
		project_name = #{projectName},
		level = #{level},
		sort_level = #{sortLevel},
		pre_taskid = #{preTaskid},
		pre_taskname = #{preTaskname},
		start_time = #{startTime},
		end_time = #{endTime},
		milestone = #{milestone},
		description = #{description},
		remarks = #{remarks},
		create_userid = #{createUserid},
		create_username = #{createUsername},
		create_time = #{createTime},
		rate = #{rate},
		budget_cost = #{budgetCost},
		budget_workload = #{budgetWorkload},
		task_state = #{taskState},
		task_type = #{taskType},
		task_class = #{taskClass},
		to_task_center = #{toTaskCenter},
		project_phase_id = #{projectPhaseId},
		project_phase_name = #{projectPhaseName},
		task_skill_names = #{taskSkillNames},
		task_skill_ids = #{taskSkillIds},
		task_out = #{taskOut},
		plan_type = #{planType},
		settle_schemel = #{settleSchemel},
		menu_id = #{menuId},
		menu_name = #{menuName}
	</sql>
	<sql id="someFieldSet">
		<if test="name != null and name != ''"> name = #{name},     </if>
		<if test="parentTaskid != null and parentTaskid != ''"> parent_taskid = #{parentTaskid},     </if>
		<if test="parentTaskname != null and parentTaskname != ''"> parent_taskname = #{parentTaskname},     </if>
		<if test="projectId != null and projectId != ''"> project_id = #{projectId},     </if>
		<if test="projectName != null and projectName != ''"> project_name = #{projectName},     </if>
		<if test="level != null and level != ''"> level = #{level},     </if>
		<if test="sortLevel != null and sortLevel != ''"> sort_level = #{sortLevel},     </if>
		<if test="preTaskid != null and preTaskid != ''"> pre_taskid = #{preTaskid},     </if>
		<if test="preTaskname != null and preTaskname != ''"> pre_taskname = #{preTaskname},     </if>
		<if test="startTime != null"> start_time = #{startTime},     </if>
		<if test="endTime != null"> end_time = #{endTime},     </if>
		<if test="milestone != null and milestone != ''"> milestone = #{milestone},     </if>
		<if test="description != null and description != ''"> description = #{description},     </if>
		<if test="remarks != null and remarks != ''"> remarks = #{remarks},     </if>
		<if test="createUserid != null and createUserid != ''"> create_userid = #{createUserid},     </if>
		<if test="createUsername != null and createUsername != ''"> create_username = #{createUsername},     </if>
		<if test="createTime != null"> create_time = #{createTime},     </if>
		<if test="rate != null and rate != ''"> rate = #{rate},     </if>
		<if test="budgetCost != null and budgetCost != ''"> budget_cost = #{budgetCost},     </if>
		<if test="budgetWorkload != null and budgetWorkload != ''"> budget_workload = #{budgetWorkload},     </if>
		<if test="taskState != null and taskState != ''"> task_state = #{taskState},     </if>
		<if test="taskType != null and taskType != ''"> task_type = #{taskType},     </if>
		<if test="taskClass != null and taskClass != ''"> task_class = #{taskClass},     </if>
		<if test="toTaskCenter != null and toTaskCenter != ''"> to_task_center = #{toTaskCenter},     </if>
		<if test="projectPhaseId != null and projectPhaseId != ''"> project_phase_id = #{projectPhaseId},     </if>
		<if test="projectPhaseName != null and projectPhaseName != ''"> project_phase_name = #{projectPhaseName},     </if>
		<if test="taskSkillNames != null and taskSkillNames != ''"> task_skill_names = #{taskSkillNames},     </if>
		<if test="taskSkillIds != null and taskSkillIds != ''"> task_skill_ids = #{taskSkillIds},     </if>
		<if test="taskOut != null and taskOut != ''"> task_out = #{taskOut},     </if>
		<if test="planType != null and planType != ''"> plan_type = #{planType},     </if>
		<if test="settleSchemel != null and settleSchemel != ''"> settle_schemel = #{settleSchemel},     </if>
		<if test="menuId != null and menuId != ''"> menu_id = #{menuId},     </if>
		<if test="menuName != null and menuName != ''"> menu_name = #{menuName},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			name = #{item.name},
			parent_taskid = #{item.parentTaskid},
			parent_taskname = #{item.parentTaskname},
			project_id = #{item.projectId},
			project_name = #{item.projectName},
			level = #{item.level},
			sort_level = #{item.sortLevel},
			pre_taskid = #{item.preTaskid},
			pre_taskname = #{item.preTaskname},
			start_time = #{item.startTime},
			end_time = #{item.endTime},
			milestone = #{item.milestone},
			description = #{item.description},
			remarks = #{item.remarks},
			create_userid = #{item.createUserid},
			create_username = #{item.createUsername},
			create_time = #{item.createTime},
			rate = #{item.rate},
			budget_cost = #{item.budgetCost},
			budget_workload = #{item.budgetWorkload},
			task_state = #{item.taskState},
			task_type = #{item.taskType},
			task_class = #{item.taskClass},
			to_task_center = #{item.toTaskCenter},
			project_phase_id = #{item.projectPhaseId},
			project_phase_name = #{item.projectPhaseName},
			task_skill_names = #{item.taskSkillNames},
			task_skill_ids = #{item.taskSkillIds},
			task_out = #{item.taskOut},
			plan_type = #{item.planType},
			settle_schemel = #{item.settleSchemel},
			menu_id = #{item.menuId},
			menu_name = #{item.menuName}
	</sql>
</mapper>