<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmTestCaseExec">
	
	
	<!--开始 自定sql函数区域 -->
		<!--请在此区域添加自定义函数-->
		
	<select id="listByProjectAndCaseIds" parameterType="HashMap" resultType="com.xm.core.entity.XmTestCaseExec">
		select * from xm_test_case_exec res
		<where>
			and res.project_id=#{projectId} 
		 	<if test="caseIds != null">  and     
				case_id in
				    <foreach collection="caseIds" item="item" index="index" open="(" separator="," close=")" >  
				        #{item}  
				    </foreach>  
			 </if>
		</where>
	</select>
		
	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select res.*,c.* from xm_test_case_exec res left join xm_test_case c on res.case_id=c.id
		<where> 
			<if test="ids != null">  and     
				id in
				    <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >  
				        #{item}  
				    </foreach>  
			 </if>
			<if test="projectId!=null and projectId!=''"> and res.project_id = #{projectId}</if>
			<if test=" createTimeStart !=null "> and res.create_time &gt; #{createTimeStart} </if>
			<if test=" createTimeEnd !=null "> and res.create_time &lt; #{createTimeEnd} </if>
			<include refid="where"/>
			<if test="menuIds != null">  and
				res.menu_id in
				<foreach collection="menuIds" item="item" index="index" open="(" separator="," close=")" >
					#{item}
				</foreach>
			</if>
			<if test="compete !=null and compete!=''">
				and exists ( select 1 from xm_group_user gu where gu.userid=#{compete} and gu.project_id=res.project_id )
			</if>
			<if test="productId != null and productId !='' ">    and exists( select 1 from xm_menu m where m.menu_id =res.menu_id and m.product_id=#{productId})  </if>
			<if test="key != null and key !='' ">    and res.case_name like #{key}   </if>

		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmTestCaseExec" resultType="com.xm.core.entity.XmTestCaseExec">
		select * from xm_test_case_exec res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmTestCaseExec" resultType="com.xm.core.entity.XmTestCaseExec">
		select * from xm_test_case_exec res
		where 
			res.id = #{id}
	</select>
	
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_test_case_exec res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmTestCaseExec" resultType="long">
		select count(1) from xm_test_case_exec res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmTestCaseExec" useGeneratedKeys="false" keyProperty="id">
		insert into xm_test_case_exec(
			<include refid="columns"/>
		) values (
		#{execUserid},#{startTime},#{id},#{projectId},#{projectName},#{caseId},#{caseName},#{endTime},#{remark},#{createUserid},#{createUsername},#{createTime},#{execStatus},#{iterationId},#{iterationName},#{execUsername},#{taskId},#{taskName},#{menuId},#{menuName}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmTestCaseExec">
		delete from xm_test_case_exec res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmTestCaseExec">
		delete from xm_test_case_exec
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmTestCaseExec">
		update  xm_test_case_exec
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmTestCaseExec">
		update  xm_test_case_exec
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_test_case_exec
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_test_case_exec
			where id in
			    <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >  
			        #{item.id }  
			    </foreach>  
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		exec_userid,start_time,id,project_id,project_name,case_id,case_name,end_time,remark,create_userid,create_username,create_time,exec_status,iteration_id,iteration_name,exec_username,task_id,task_name,menu_id,menu_name
	</sql>
	
	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="execUserid != null and execUserid != ''">      and res.exec_userid = #{execUserid}     </if>
		<if test="startTime != null">      and TO_CHAR(res.start_time,'YYYY-MM-DD') = TO_CHAR(#{startTime},'YYYY-MM-DD')     </if>
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="projectId != null and projectId != ''">      and res.project_id = #{projectId}     </if>
		<if test="projectName != null and projectName != ''">      and res.project_name = #{projectName}     </if>
		<if test="caseId != null and caseId != ''">      and res.case_id = #{caseId}     </if>
		<if test="caseName != null and caseName != ''">      and res.case_name = #{caseName}     </if>
		<if test="endTime != null">      and TO_CHAR(res.end_time,'YYYY-MM-DD') = TO_CHAR(#{endTime},'YYYY-MM-DD')     </if>
		<if test="remark != null and remark != ''">      and res.remark = #{remark}     </if>
		<if test="createUserid != null and createUserid != ''">      and res.create_userid = #{createUserid}     </if>
		<if test="createUsername != null and createUsername != ''">      and res.create_username = #{createUsername}     </if>
		<if test="createTime != null">      and TO_CHAR(res.create_time,'YYYY-MM-DD') = TO_CHAR(#{createTime},'YYYY-MM-DD')     </if>
		<if test="execStatus != null and execStatus != ''">      and res.exec_status = #{execStatus}     </if>
		<if test="iterationId != null and iterationId != ''">      and res.iteration_id = #{iterationId}     </if>
		<if test="iterationName != null and iterationName != ''">      and res.iteration_name = #{iterationName}     </if>
		<if test="execUsername != null and execUsername != ''">      and res.exec_username = #{execUsername}     </if>
		<if test="taskId != null and taskId != ''">      and res.task_id = #{taskId}     </if>
		<if test="taskName != null and taskName != ''">      and res.task_name = #{taskName}     </if>
		<if test="menuId != null and menuId != ''">      and res.menu_id = #{menuId}     </if>
		<if test="menuName != null and menuName != ''">      and res.menu_name = #{menuName}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		exec_userid = #{execUserid},
		start_time = #{startTime},
		project_id = #{projectId},
		project_name = #{projectName},
		case_id = #{caseId},
		case_name = #{caseName},
		end_time = #{endTime},
		remark = #{remark},
		create_userid = #{createUserid},
		create_username = #{createUsername},
		create_time = #{createTime},
		exec_status = #{execStatus},
		iteration_id = #{iterationId},
		iteration_name = #{iterationName},
		exec_username = #{execUsername},
		task_id = #{taskId},
		task_name = #{taskName},
		menu_id = #{menuId},
		menu_name = #{menuName}
	</sql>
	<sql id="someFieldSet">
		<if test="execUserid != null and execUserid != ''"> exec_userid = #{execUserid},     </if>
		<if test="startTime != null"> start_time = #{startTime},     </if>
		<if test="projectId != null and projectId != ''"> project_id = #{projectId},     </if>
		<if test="projectName != null and projectName != ''"> project_name = #{projectName},     </if>
		<if test="caseId != null and caseId != ''"> case_id = #{caseId},     </if>
		<if test="caseName != null and caseName != ''"> case_name = #{caseName},     </if>
		<if test="endTime != null"> end_time = #{endTime},     </if>
		<if test="remark != null and remark != ''"> remark = #{remark},     </if>
		<if test="createUserid != null and createUserid != ''"> create_userid = #{createUserid},     </if>
		<if test="createUsername != null and createUsername != ''"> create_username = #{createUsername},     </if>
		<if test="createTime != null"> create_time = #{createTime},     </if>
		<if test="execStatus != null and execStatus != ''"> exec_status = #{execStatus},     </if>
		<if test="iterationId != null and iterationId != ''"> iteration_id = #{iterationId},     </if>
		<if test="iterationName != null and iterationName != ''"> iteration_name = #{iterationName},     </if>
		<if test="execUsername != null and execUsername != ''"> exec_username = #{execUsername},     </if>
		<if test="taskId != null and taskId != ''"> task_id = #{taskId},     </if>
		<if test="taskName != null and taskName != ''"> task_name = #{taskName},     </if>
		<if test="menuId != null and menuId != ''"> menu_id = #{menuId},     </if>
		<if test="menuName != null and menuName != ''"> menu_name = #{menuName},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			exec_userid = #{item.execUserid},
			start_time = #{item.startTime},
			project_id = #{item.projectId},
			project_name = #{item.projectName},
			case_id = #{item.caseId},
			case_name = #{item.caseName},
			end_time = #{item.endTime},
			remark = #{item.remark},
			create_userid = #{item.createUserid},
			create_username = #{item.createUsername},
			create_time = #{item.createTime},
			exec_status = #{item.execStatus},
			iteration_id = #{item.iterationId},
			iteration_name = #{item.iterationName},
			exec_username = #{item.execUsername},
			task_id = #{item.taskId},
			task_name = #{item.taskName},
			menu_id = #{item.menuId},
			menu_name = #{item.menuName}
	</sql>
</mapper>