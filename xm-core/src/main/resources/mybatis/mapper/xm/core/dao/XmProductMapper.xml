<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmProduct">
	
	
	<!--开始 自定sql函数区域 请在此区域添加自定义函数,其它区域尽量不要动，因为代码随时重新生成 -->

    <sql id="whereForMap">
         <if test=" ids != null">  and (res.id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
         </if>
		<if test="key != null and key !='' ">   and res.product_name like #{key}    </if>
		<if test=" projectId !=null and projectId!=''">
			and exists( select 1 from  xm_product_project_link ppl
			where ppl.project_id=#{projectId}  and ppl.product_id=res.id
			)
		</if>
		<if test="compete !=null and compete!=''">
			and ( exists ( select 1 from xm_project_group_user gu inner join xm_task t on gu.project_id=t.project_id and t.product_id=res.id where gu.userid=#{compete} and t.product_id=res.id )
			or res.pm_userid=#{compete}
			or exists ( select 1 from xm_menu m where m.mm_userid=#{compete} and m.product_id=res.id)
			)
		</if>
		<if test="ctimeStart!=null and ctimeEnd!=null ">and ctime between #{ctimeStart} and #{ctimeEnd}</if>
    </sql>

	<select id="selectListMapByWhereWithState" parameterType="HashMap" resultType="HashMap">
		select res.*,s.* from xm_product res left join xm_product_state s on res.id=s.product_id
		<where>
			<if test="ids != null">  and
				id in
				<foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
					#{item}
				</foreach>
			</if>
			<include refid="where"/>
			<if test=" projectId !=null and projectId!=''">
				and exists( select 1 from  xm_product_project_link ppl
				where ppl.project_id=#{projectId}  and ppl.product_id=res.id
				)
			</if>
			<if test="iterationId!=null and iterationId!=''">
				and exists( select 1 from xm_iteration_product_link ipl where ipl.product_id =res.id and ipl.iteration_id=#{iterationId} )
			</if>
			<if test="compete !=null and compete!=''">
				and ( exists ( select 1 from xm_project_group_user gu inner join xm_task t on gu.project_id=t.project_id and t.product_id=res.id where gu.userid=#{compete} and t.product_id=res.id )
				or res.pm_userid=#{compete}
				or exists ( select 1 from xm_menu m where m.mm_userid=#{compete} and m.product_id=res.id)
				)
			</if>
			<if test="key != null and key !='' ">   and res.product_name like #{key}    </if>
			<if test="ctimeStart!=null and ctimeEnd!=null ">and ctime between #{ctimeStart} and #{ctimeEnd}</if>

			<if test="isTpl!=null and isTpl=='1'">
				and (res.branch_id in( #{platformBranchId},#{myBranchId}) and res.is_tpl='1')
			</if>
		</where>
	</select>


	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_product res
		<where>
		    <include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmProduct" resultType="com.xm.core.entity.XmProduct">
		select * from xm_product res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmProduct" resultType="com.xm.core.entity.XmProduct">
		select * from xm_product res
		where 
			res.id = #{id}
	</select>
    <select id="selectListByIds" parameterType="List" resultType="com.xm.core.entity.XmProduct">
        select * from xm_product res
        where  (res.id) in
             <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
    </select>
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_product res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmProduct" resultType="long">
		select count(1) from xm_product res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmProduct" useGeneratedKeys="false"   keyProperty="id">
		insert into xm_product(
			<include refid="columns"/>
		) values (
		#{id},#{productName},#{branchId},#{remark},#{version},#{pmUserid},#{pmUsername},#{ctime},#{deptid},#{pstatus},#{startTime},#{endTime},#{deptName},#{admUserid},#{admUsername},#{assUserid},#{assUsername},#{bizProcInstId},#{bizFlowState},#{isTpl},#{baselineId},#{baseTime},#{code},#{pbudgetWorkload},#{pbudgetAmount},#{pmenuBudgetWorkload},#{pmenuBudgetAmount},#{budgetCtrl},#{phaseBudgetCtrl},#{phaseActCtrl},#{locked},#{del},#{ltime}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmProduct">
		delete from xm_product res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmProduct">
		delete from xm_product 
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmProduct">
		update  xm_product 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmProduct">
		update  xm_product 
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_product 
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_product 
			where
			(id) in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    (  #{item.id} )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,product_name,branch_id,remark,version,pm_userid,pm_username,ctime,deptid,pstatus,start_time,end_time,dept_name,adm_userid,adm_username,ass_userid,ass_username,biz_proc_inst_id,biz_flow_state,is_tpl,baseline_id,base_time,code,pbudget_workload,pbudget_amount,pmenu_budget_workload,pmenu_budget_amount,budget_ctrl,phase_budget_ctrl,phase_act_ctrl,locked,del,ltime
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="productName != null and productName != ''">      and res.product_name = #{productName}     </if>
		<if test="branchId != null and branchId != ''">      and res.branch_id = #{branchId}     </if>
		<if test="remark != null and remark != ''">      and res.remark = #{remark}     </if>
		<if test="version != null and version != ''">      and res.version = #{version}     </if>
		<if test="pmUserid != null and pmUserid != ''">      and res.pm_userid = #{pmUserid}     </if>
		<if test="pmUsername != null and pmUsername != ''">      and res.pm_username = #{pmUsername}     </if>
		<if test="ctime != null">      and date_format(res.ctime,'%Y-%m-%d') = date_format(#{ctime},'%Y-%m-%d')     </if>
		<if test="deptid != null and deptid != ''">      and res.deptid = #{deptid}     </if>
		<if test="pstatus != null and pstatus != ''">      and res.pstatus = #{pstatus}     </if>
		<if test="startTime != null">      and date_format(res.start_time,'%Y-%m-%d') = date_format(#{startTime},'%Y-%m-%d')     </if>
		<if test="endTime != null">      and date_format(res.end_time,'%Y-%m-%d') = date_format(#{endTime},'%Y-%m-%d')     </if>
		<if test="deptName != null and deptName != ''">      and res.dept_name = #{deptName}     </if>
		<if test="admUserid != null and admUserid != ''">      and res.adm_userid = #{admUserid}     </if>
		<if test="admUsername != null and admUsername != ''">      and res.adm_username = #{admUsername}     </if>
		<if test="assUserid != null and assUserid != ''">      and res.ass_userid = #{assUserid}     </if>
		<if test="assUsername != null and assUsername != ''">      and res.ass_username = #{assUsername}     </if>
		<if test="bizProcInstId != null and bizProcInstId != ''">      and res.biz_proc_inst_id = #{bizProcInstId}     </if>
		<if test="bizFlowState != null and bizFlowState != ''">      and res.biz_flow_state = #{bizFlowState}     </if>
		<if test="isTpl != null and isTpl != ''">      and res.is_tpl = #{isTpl}     </if>
		<if test="baselineId != null and baselineId != ''">      and res.baseline_id = #{baselineId}     </if>
		<if test="baseTime != null">      and date_format(res.base_time,'%Y-%m-%d') = date_format(#{baseTime},'%Y-%m-%d')     </if>
		<if test="code != null and code != ''">      and res.code = #{code}     </if>
		<if test="pbudgetWorkload != null and pbudgetWorkload != ''">      and res.pbudget_workload = #{pbudgetWorkload}     </if>
		<if test="pbudgetAmount != null and pbudgetAmount != ''">      and res.pbudget_amount = #{pbudgetAmount}     </if>
		<if test="pmenuBudgetWorkload != null and pmenuBudgetWorkload != ''">      and res.pmenu_budget_workload = #{pmenuBudgetWorkload}     </if>
		<if test="pmenuBudgetAmount != null and pmenuBudgetAmount != ''">      and res.pmenu_budget_amount = #{pmenuBudgetAmount}     </if>
		<if test="budgetCtrl != null and budgetCtrl != ''">      and res.budget_ctrl = #{budgetCtrl}     </if>
		<if test="phaseBudgetCtrl != null and phaseBudgetCtrl != ''">      and res.phase_budget_ctrl = #{phaseBudgetCtrl}     </if>
		<if test="phaseActCtrl != null and phaseActCtrl != ''">      and res.phase_act_ctrl = #{phaseActCtrl}     </if>
		<if test="locked != null and locked != ''">      and res.locked = #{locked}     </if>
		<if test="del != null and del != ''">      and res.del = #{del}     </if>
		<if test="ltime != null">      and date_format(res.ltime,'%Y-%m-%d') = date_format(#{ltime},'%Y-%m-%d')     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		product_name = #{productName},
		branch_id = #{branchId},
		remark = #{remark},
		version = #{version},
		pm_userid = #{pmUserid},
		pm_username = #{pmUsername},
		ctime = #{ctime},
		deptid = #{deptid},
		pstatus = #{pstatus},
		start_time = #{startTime},
		end_time = #{endTime},
		dept_name = #{deptName},
		adm_userid = #{admUserid},
		adm_username = #{admUsername},
		ass_userid = #{assUserid},
		ass_username = #{assUsername},
		biz_proc_inst_id = #{bizProcInstId},
		biz_flow_state = #{bizFlowState},
		is_tpl = #{isTpl},
		baseline_id = #{baselineId},
		base_time = #{baseTime},
		code = #{code},
		pbudget_workload = #{pbudgetWorkload},
		pbudget_amount = #{pbudgetAmount},
		pmenu_budget_workload = #{pmenuBudgetWorkload},
		pmenu_budget_amount = #{pmenuBudgetAmount},
		budget_ctrl = #{budgetCtrl},
		phase_budget_ctrl = #{phaseBudgetCtrl},
		phase_act_ctrl = #{phaseActCtrl},
		locked = #{locked},
		del = #{del},
		ltime = #{ltime}
	</sql>
	<sql id="someFieldSet">
		<if test="productName != null and productName != ''"> product_name = #{productName},     </if>
		<if test="branchId != null and branchId != ''"> branch_id = #{branchId},     </if>
		<if test="remark != null and remark != ''"> remark = #{remark},     </if>
		<if test="version != null and version != ''"> version = #{version},     </if>
		<if test="pmUserid != null and pmUserid != ''"> pm_userid = #{pmUserid},     </if>
		<if test="pmUsername != null and pmUsername != ''"> pm_username = #{pmUsername},     </if>
		<if test="ctime != null"> ctime = #{ctime},     </if>
		<if test="deptid != null and deptid != ''"> deptid = #{deptid},     </if>
		<if test="pstatus != null and pstatus != ''"> pstatus = #{pstatus},     </if>
		<if test="startTime != null"> start_time = #{startTime},     </if>
		<if test="endTime != null"> end_time = #{endTime},     </if>
		<if test="deptName != null and deptName != ''"> dept_name = #{deptName},     </if>
		<if test="admUserid != null and admUserid != ''"> adm_userid = #{admUserid},     </if>
		<if test="admUsername != null and admUsername != ''"> adm_username = #{admUsername},     </if>
		<if test="assUserid != null and assUserid != ''"> ass_userid = #{assUserid},     </if>
		<if test="assUsername != null and assUsername != ''"> ass_username = #{assUsername},     </if>
		<if test="bizProcInstId != null and bizProcInstId != ''"> biz_proc_inst_id = #{bizProcInstId},     </if>
		<if test="bizFlowState != null and bizFlowState != ''"> biz_flow_state = #{bizFlowState},     </if>
		<if test="isTpl != null and isTpl != ''"> is_tpl = #{isTpl},     </if>
		<if test="baselineId != null and baselineId != ''"> baseline_id = #{baselineId},     </if>
		<if test="baseTime != null"> base_time = #{baseTime},     </if>
		<if test="code != null and code != ''"> code = #{code},     </if>
		<if test="pbudgetWorkload != null and pbudgetWorkload != ''"> pbudget_workload = #{pbudgetWorkload},     </if>
		<if test="pbudgetAmount != null and pbudgetAmount != ''"> pbudget_amount = #{pbudgetAmount},     </if>
		<if test="pmenuBudgetWorkload != null and pmenuBudgetWorkload != ''"> pmenu_budget_workload = #{pmenuBudgetWorkload},     </if>
		<if test="pmenuBudgetAmount != null and pmenuBudgetAmount != ''"> pmenu_budget_amount = #{pmenuBudgetAmount},     </if>
		<if test="budgetCtrl != null and budgetCtrl != ''"> budget_ctrl = #{budgetCtrl},     </if>
		<if test="phaseBudgetCtrl != null and phaseBudgetCtrl != ''"> phase_budget_ctrl = #{phaseBudgetCtrl},     </if>
		<if test="phaseActCtrl != null and phaseActCtrl != ''"> phase_act_ctrl = #{phaseActCtrl},     </if>
		<if test="locked != null and locked != ''"> locked = #{locked},     </if>
		<if test="del != null and del != ''"> del = #{del},     </if>
		<if test="ltime != null"> ltime = #{ltime},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			product_name = #{item.productName},
			branch_id = #{item.branchId},
			remark = #{item.remark},
			version = #{item.version},
			pm_userid = #{item.pmUserid},
			pm_username = #{item.pmUsername},
			ctime = #{item.ctime},
			deptid = #{item.deptid},
			pstatus = #{item.pstatus},
			start_time = #{item.startTime},
			end_time = #{item.endTime},
			dept_name = #{item.deptName},
			adm_userid = #{item.admUserid},
			adm_username = #{item.admUsername},
			ass_userid = #{item.assUserid},
			ass_username = #{item.assUsername},
			biz_proc_inst_id = #{item.bizProcInstId},
			biz_flow_state = #{item.bizFlowState},
			is_tpl = #{item.isTpl},
			baseline_id = #{item.baselineId},
			base_time = #{item.baseTime},
			code = #{item.code},
			pbudget_workload = #{item.pbudgetWorkload},
			pbudget_amount = #{item.pbudgetAmount},
			pmenu_budget_workload = #{item.pmenuBudgetWorkload},
			pmenu_budget_amount = #{item.pmenuBudgetAmount},
			budget_ctrl = #{item.budgetCtrl},
			phase_budget_ctrl = #{item.phaseBudgetCtrl},
			phase_act_ctrl = #{item.phaseActCtrl},
			locked = #{item.locked},
			del = #{item.del},
			ltime = #{item.ltime}
	</sql>
</mapper>