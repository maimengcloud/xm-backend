<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmTestCasedb">
	
	
	<!--开始 自定sql函数区域 请在此区域添加自定义函数,其它区域尽量不要动，因为代码随时重新生成 -->

    <sql id="whereForMap">
         <if test=" ids != null">  and (res.id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
         </if>
        <if test="key != null and key !='' "> and res.name like  concat('%',#{key},'%')    </if>
    </sql>


	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_test_casedb res
		<where>
		    <include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmTestCasedb" resultType="com.xm.core.entity.XmTestCasedb">
		select * from xm_test_casedb res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmTestCasedb" resultType="com.xm.core.entity.XmTestCasedb">
		select * from xm_test_casedb res
		where 
			res.id = #{id}
	</select>
    <select id="selectListByIds" parameterType="List" resultType="com.xm.core.entity.XmTestCasedb">
        select * from xm_test_casedb res
        where  (res.id) in
             <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
    </select>
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_test_casedb res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmTestCasedb" resultType="long">
		select count(*) from xm_test_casedb res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmTestCasedb" useGeneratedKeys="false"   keyProperty="id">
		insert into xm_test_casedb(
			<include refid="columns"/>
		) values (
		#{id},#{name},#{cuserid},#{cusername},#{ctime},#{cbranchId},#{productId},#{productName},#{totalCases},#{okCases},#{errCases},#{igCases},#{blCases},#{bugCnt},#{closedBugs},#{resolvedBugs},#{activeBugs},#{confirmedBugs},#{testPlans},#{menus},#{funcs},#{status},#{budgetWorkload},#{actWorkload}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmTestCasedb">
		delete from xm_test_casedb res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmTestCasedb">
		delete from xm_test_casedb 
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmTestCasedb">
		update  xm_test_casedb 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmTestCasedb">
		update  xm_test_casedb 
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_test_casedb 
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>

	<!-- 批量修改某几个字段 -->
	<delete id="editSomeFields" parameterType="HashMap">
		update  xm_test_casedb
        <set>
            <include refid="someFieldSet"/>
        </set>
        where  (id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
	</delete>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_test_casedb 
			where
			(id) in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    (  #{item.id} )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,name,cuserid,cusername,ctime,cbranch_id,product_id,product_name,total_cases,ok_cases,err_cases,ig_cases,bl_cases,bug_cnt,closed_bugs,resolved_bugs,active_bugs,confirmed_bugs,test_plans,menus,funcs,status,budget_workload,act_workload
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="name != null and name != ''">      and res.name = #{name}     </if>
		<if test="cuserid != null and cuserid != ''">      and res.cuserid = #{cuserid}     </if>
		<if test="cusername != null and cusername != ''">      and res.cusername = #{cusername}     </if>
		<if test="ctime != null">      and date_format(res.ctime,'%Y-%m-%d') = date_format(#{ctime},'%Y-%m-%d')     </if>
		<if test="cbranchId != null and cbranchId != ''">      and res.cbranch_id = #{cbranchId}     </if>
		<if test="productId != null and productId != ''">      and res.product_id = #{productId}     </if>
		<if test="productName != null and productName != ''">      and res.product_name = #{productName}     </if>
		<if test="totalCases != null and totalCases != ''">      and res.total_cases = #{totalCases}     </if>
		<if test="okCases != null and okCases != ''">      and res.ok_cases = #{okCases}     </if>
		<if test="errCases != null and errCases != ''">      and res.err_cases = #{errCases}     </if>
		<if test="igCases != null and igCases != ''">      and res.ig_cases = #{igCases}     </if>
		<if test="blCases != null and blCases != ''">      and res.bl_cases = #{blCases}     </if>
		<if test="bugCnt != null and bugCnt != ''">      and res.bug_cnt = #{bugCnt}     </if>
		<if test="closedBugs != null and closedBugs != ''">      and res.closed_bugs = #{closedBugs}     </if>
		<if test="resolvedBugs != null and resolvedBugs != ''">      and res.resolved_bugs = #{resolvedBugs}     </if>
		<if test="activeBugs != null and activeBugs != ''">      and res.active_bugs = #{activeBugs}     </if>
		<if test="confirmedBugs != null and confirmedBugs != ''">      and res.confirmed_bugs = #{confirmedBugs}     </if>
		<if test="testPlans != null and testPlans != ''">      and res.test_plans = #{testPlans}     </if>
		<if test="menus != null and menus != ''">      and res.menus = #{menus}     </if>
		<if test="funcs != null and funcs != ''">      and res.funcs = #{funcs}     </if>
		<if test="status != null and status != ''">      and res.status = #{status}     </if>
		<if test="budgetWorkload != null and budgetWorkload != ''">      and res.budget_workload = #{budgetWorkload}     </if>
		<if test="actWorkload != null and actWorkload != ''">      and res.act_workload = #{actWorkload}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		name = #{name},
		cuserid = #{cuserid},
		cusername = #{cusername},
		ctime = #{ctime},
		cbranch_id = #{cbranchId},
		product_id = #{productId},
		product_name = #{productName},
		total_cases = #{totalCases},
		ok_cases = #{okCases},
		err_cases = #{errCases},
		ig_cases = #{igCases},
		bl_cases = #{blCases},
		bug_cnt = #{bugCnt},
		closed_bugs = #{closedBugs},
		resolved_bugs = #{resolvedBugs},
		active_bugs = #{activeBugs},
		confirmed_bugs = #{confirmedBugs},
		test_plans = #{testPlans},
		menus = #{menus},
		funcs = #{funcs},
		status = #{status},
		budget_workload = #{budgetWorkload},
		act_workload = #{actWorkload}
	</sql>
	<sql id="someFieldSet">
		<if test="name != null and name != ''"> name = #{name},     </if>
		<if test="cuserid != null and cuserid != ''"> cuserid = #{cuserid},     </if>
		<if test="cusername != null and cusername != ''"> cusername = #{cusername},     </if>
		<if test="ctime != null"> ctime = #{ctime},     </if>
		<if test="cbranchId != null and cbranchId != ''"> cbranch_id = #{cbranchId},     </if>
		<if test="productId != null and productId != ''"> product_id = #{productId},     </if>
		<if test="productName != null and productName != ''"> product_name = #{productName},     </if>
		<if test="totalCases != null and totalCases != ''"> total_cases = #{totalCases},     </if>
		<if test="okCases != null and okCases != ''"> ok_cases = #{okCases},     </if>
		<if test="errCases != null and errCases != ''"> err_cases = #{errCases},     </if>
		<if test="igCases != null and igCases != ''"> ig_cases = #{igCases},     </if>
		<if test="blCases != null and blCases != ''"> bl_cases = #{blCases},     </if>
		<if test="bugCnt != null and bugCnt != ''"> bug_cnt = #{bugCnt},     </if>
		<if test="closedBugs != null and closedBugs != ''"> closed_bugs = #{closedBugs},     </if>
		<if test="resolvedBugs != null and resolvedBugs != ''"> resolved_bugs = #{resolvedBugs},     </if>
		<if test="activeBugs != null and activeBugs != ''"> active_bugs = #{activeBugs},     </if>
		<if test="confirmedBugs != null and confirmedBugs != ''"> confirmed_bugs = #{confirmedBugs},     </if>
		<if test="testPlans != null and testPlans != ''"> test_plans = #{testPlans},     </if>
		<if test="menus != null and menus != ''"> menus = #{menus},     </if>
		<if test="funcs != null and funcs != ''"> funcs = #{funcs},     </if>
		<if test="status != null and status != ''"> status = #{status},     </if>
		<if test="budgetWorkload != null and budgetWorkload != ''"> budget_workload = #{budgetWorkload},     </if>
		<if test="actWorkload != null and actWorkload != ''"> act_workload = #{actWorkload},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			name = #{item.name},
			cuserid = #{item.cuserid},
			cusername = #{item.cusername},
			ctime = #{item.ctime},
			cbranch_id = #{item.cbranchId},
			product_id = #{item.productId},
			product_name = #{item.productName},
			total_cases = #{item.totalCases},
			ok_cases = #{item.okCases},
			err_cases = #{item.errCases},
			ig_cases = #{item.igCases},
			bl_cases = #{item.blCases},
			bug_cnt = #{item.bugCnt},
			closed_bugs = #{item.closedBugs},
			resolved_bugs = #{item.resolvedBugs},
			active_bugs = #{item.activeBugs},
			confirmed_bugs = #{item.confirmedBugs},
			test_plans = #{item.testPlans},
			menus = #{item.menus},
			funcs = #{item.funcs},
			status = #{item.status},
			budget_workload = #{item.budgetWorkload},
			act_workload = #{item.actWorkload}
	</sql>
</mapper>