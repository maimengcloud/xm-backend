<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmTaskBidOrder">
	
	
	<!--开始 自定sql函数区域 请在此区域添加自定义函数,其它区域尽量不要动，因为代码随时重新生成 -->

    <sql id="whereForMap">
         <if test=" ids != null">  and (res.id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
         </if>
        <if test="key != null and key !='' ">       </if>
    </sql>


	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_task_bid_order res
		<where>
		    <include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmTaskBidOrder" resultType="com.xm.core.entity.XmTaskBidOrder">
		select * from xm_task_bid_order res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmTaskBidOrder" resultType="com.xm.core.entity.XmTaskBidOrder">
		select * from xm_task_bid_order res
		where 
			res.id = #{id}
	</select>
    <select id="selectListByIds" parameterType="List" resultType="com.xm.core.entity.XmTaskBidOrder">
        select * from xm_task_bid_order res
        where  (res.id) in
             <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
    </select>
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_task_bid_order res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmTaskBidOrder" resultType="long">
		select count(*) from xm_task_bid_order res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmTaskBidOrder" useGeneratedKeys="false"   keyProperty="id">
		insert into xm_task_bid_order(
			<include refid="columns"/>
		) values (
		#{id},#{ouserid},#{obranchId},#{ostatus},#{ctime},#{ltime},#{payType},#{payStatus},#{payTime},#{prepayId},#{finalFee},#{othFee},#{originFee},#{payAt},#{payOpenid},#{payUserid},#{payUsername},#{taskId},#{calcStatus},#{calcTime},#{payId},#{tranId},#{remark},#{name},#{bizType},#{projectId},#{otype},#{taskBudgetAt}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmTaskBidOrder">
		delete from xm_task_bid_order res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmTaskBidOrder">
		delete from xm_task_bid_order 
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmTaskBidOrder">
		update  xm_task_bid_order 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmTaskBidOrder">
		update  xm_task_bid_order 
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_task_bid_order 
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>

	<!-- 批量修改某几个字段 -->
	<delete id="editSomeFields" parameterType="HashMap">
		update  xm_task_bid_order
        <set>
            <include refid="someFieldSet"/>
        </set>
        where  (id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
	</delete>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_task_bid_order 
			where
			(id) in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    (  #{item.id} )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,ouserid,obranch_id,ostatus,ctime,ltime,pay_type,pay_status,pay_time,prepay_id,final_fee,oth_fee,origin_fee,pay_at,pay_openid,pay_userid,pay_username,task_id,calc_status,calc_time,pay_id,tran_id,remark,name,biz_type,project_id,otype,task_budget_at
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="ouserid != null and ouserid != ''">      and res.ouserid = #{ouserid}     </if>
		<if test="obranchId != null and obranchId != ''">      and res.obranch_id = #{obranchId}     </if>
		<if test="ostatus != null and ostatus != ''">      and res.ostatus = #{ostatus}     </if>
		<if test="ctime != null">      and date_format(res.ctime,'%Y-%m-%d') = date_format(#{ctime},'%Y-%m-%d')     </if>
		<if test="ltime != null">      and date_format(res.ltime,'%Y-%m-%d') = date_format(#{ltime},'%Y-%m-%d')     </if>
		<if test="payType != null and payType != ''">      and res.pay_type = #{payType}     </if>
		<if test="payStatus != null and payStatus != ''">      and res.pay_status = #{payStatus}     </if>
		<if test="payTime != null">      and date_format(res.pay_time,'%Y-%m-%d') = date_format(#{payTime},'%Y-%m-%d')     </if>
		<if test="prepayId != null and prepayId != ''">      and res.prepay_id = #{prepayId}     </if>
		<if test="finalFee != null and finalFee != ''">      and res.final_fee = #{finalFee}     </if>
		<if test="othFee != null and othFee != ''">      and res.oth_fee = #{othFee}     </if>
		<if test="originFee != null and originFee != ''">      and res.origin_fee = #{originFee}     </if>
		<if test="payAt != null and payAt != ''">      and res.pay_at = #{payAt}     </if>
		<if test="payOpenid != null and payOpenid != ''">      and res.pay_openid = #{payOpenid}     </if>
		<if test="payUserid != null and payUserid != ''">      and res.pay_userid = #{payUserid}     </if>
		<if test="payUsername != null and payUsername != ''">      and res.pay_username = #{payUsername}     </if>
		<if test="taskId != null and taskId != ''">      and res.task_id = #{taskId}     </if>
		<if test="calcStatus != null and calcStatus != ''">      and res.calc_status = #{calcStatus}     </if>
		<if test="calcTime != null">      and date_format(res.calc_time,'%Y-%m-%d') = date_format(#{calcTime},'%Y-%m-%d')     </if>
		<if test="payId != null and payId != ''">      and res.pay_id = #{payId}     </if>
		<if test="tranId != null and tranId != ''">      and res.tran_id = #{tranId}     </if>
		<if test="remark != null and remark != ''">      and res.remark = #{remark}     </if>
		<if test="name != null and name != ''">      and res.name = #{name}     </if>
		<if test="bizType != null and bizType != ''">      and res.biz_type = #{bizType}     </if>
		<if test="projectId != null and projectId != ''">      and res.project_id = #{projectId}     </if>
		<if test="otype != null and otype != ''">      and res.otype = #{otype}     </if>
		<if test="taskBudgetAt != null and taskBudgetAt != ''">      and res.task_budget_at = #{taskBudgetAt}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		ouserid = #{ouserid},
		obranch_id = #{obranchId},
		ostatus = #{ostatus},
		ctime = #{ctime},
		ltime = #{ltime},
		pay_type = #{payType},
		pay_status = #{payStatus},
		pay_time = #{payTime},
		prepay_id = #{prepayId},
		final_fee = #{finalFee},
		oth_fee = #{othFee},
		origin_fee = #{originFee},
		pay_at = #{payAt},
		pay_openid = #{payOpenid},
		pay_userid = #{payUserid},
		pay_username = #{payUsername},
		task_id = #{taskId},
		calc_status = #{calcStatus},
		calc_time = #{calcTime},
		pay_id = #{payId},
		tran_id = #{tranId},
		remark = #{remark},
		name = #{name},
		biz_type = #{bizType},
		project_id = #{projectId},
		otype = #{otype},
		task_budget_at = #{taskBudgetAt}
	</sql>
	<sql id="someFieldSet">
		<if test="ouserid != null and ouserid != ''"> ouserid = #{ouserid},     </if>
		<if test="obranchId != null and obranchId != ''"> obranch_id = #{obranchId},     </if>
		<if test="ostatus != null and ostatus != ''"> ostatus = #{ostatus},     </if>
		<if test="ctime != null"> ctime = #{ctime},     </if>
		<if test="ltime != null"> ltime = #{ltime},     </if>
		<if test="payType != null and payType != ''"> pay_type = #{payType},     </if>
		<if test="payStatus != null and payStatus != ''"> pay_status = #{payStatus},     </if>
		<if test="payTime != null"> pay_time = #{payTime},     </if>
		<if test="prepayId != null and prepayId != ''"> prepay_id = #{prepayId},     </if>
		<if test="finalFee != null and finalFee != ''"> final_fee = #{finalFee},     </if>
		<if test="othFee != null and othFee != ''"> oth_fee = #{othFee},     </if>
		<if test="originFee != null and originFee != ''"> origin_fee = #{originFee},     </if>
		<if test="payAt != null and payAt != ''"> pay_at = #{payAt},     </if>
		<if test="payOpenid != null and payOpenid != ''"> pay_openid = #{payOpenid},     </if>
		<if test="payUserid != null and payUserid != ''"> pay_userid = #{payUserid},     </if>
		<if test="payUsername != null and payUsername != ''"> pay_username = #{payUsername},     </if>
		<if test="taskId != null and taskId != ''"> task_id = #{taskId},     </if>
		<if test="calcStatus != null and calcStatus != ''"> calc_status = #{calcStatus},     </if>
		<if test="calcTime != null"> calc_time = #{calcTime},     </if>
		<if test="payId != null and payId != ''"> pay_id = #{payId},     </if>
		<if test="tranId != null and tranId != ''"> tran_id = #{tranId},     </if>
		<if test="remark != null and remark != ''"> remark = #{remark},     </if>
		<if test="name != null and name != ''"> name = #{name},     </if>
		<if test="bizType != null and bizType != ''"> biz_type = #{bizType},     </if>
		<if test="projectId != null and projectId != ''"> project_id = #{projectId},     </if>
		<if test="otype != null and otype != ''"> otype = #{otype},     </if>
		<if test="taskBudgetAt != null and taskBudgetAt != ''"> task_budget_at = #{taskBudgetAt},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			ouserid = #{item.ouserid},
			obranch_id = #{item.obranchId},
			ostatus = #{item.ostatus},
			ctime = #{item.ctime},
			ltime = #{item.ltime},
			pay_type = #{item.payType},
			pay_status = #{item.payStatus},
			pay_time = #{item.payTime},
			prepay_id = #{item.prepayId},
			final_fee = #{item.finalFee},
			oth_fee = #{item.othFee},
			origin_fee = #{item.originFee},
			pay_at = #{item.payAt},
			pay_openid = #{item.payOpenid},
			pay_userid = #{item.payUserid},
			pay_username = #{item.payUsername},
			task_id = #{item.taskId},
			calc_status = #{item.calcStatus},
			calc_time = #{item.calcTime},
			pay_id = #{item.payId},
			tran_id = #{item.tranId},
			remark = #{item.remark},
			name = #{item.name},
			biz_type = #{item.bizType},
			project_id = #{item.projectId},
			otype = #{item.otype},
			task_budget_at = #{item.taskBudgetAt}
	</sql>
</mapper>