<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmTaskEval">
	
	
	<!--开始 自定sql函数区域 请在此区域添加自定义函数,其它区域尽量不要动，因为代码随时重新生成 -->

    <sql id="whereForMap">
         <if test=" ids != null">  and (res.id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
         </if>
        <if test="key != null and key !='' ">       </if>
    </sql>

	<select id="getServiceProviderEval" parameterType="com.mdp.safe.client.entity.User" resultType="com.xm.core.entity.MyTotalEval">
		select sum(ifnull(total_star,5))/count(*) as total_star,sum(ifnull(wspeed,5))/count(*) as wspeed,
		sum(ifnull(wattit,5))/count(*) as wattit,sum(ifnull(wquality,5))/count(*) as wquality,
		sum(ifnull(coop_happy,5))/count(*) as coop_happy,sum(ifnull(pay_speed,5))/count(*) as pay_speed,
		count(*) as eval_user_cnt from xm_task_eval
		where to_branch_id=#{branchId}
		group by to_branch_id
	</select>
	<select id="getPersonEval" parameterType="com.mdp.safe.client.entity.User" resultType="com.xm.core.entity.MyTotalEval">
		select sum(ifnull(total_star,5))/count(*) as total_star,sum(ifnull(wspeed,5))/count(*) as wspeed,
		sum(ifnull(wattit,5))/count(*) as wattit,sum(ifnull(wquality,5))/count(*) as wquality,
		sum(ifnull(coop_happy,5))/count(*) as coop_happy,sum(ifnull(pay_speed,5))/count(*) as pay_speed,
		count(*) as eval_user_cnt from xm_task_eval
		where to_userid=#{userid}
		group by to_userid
	</select>
	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_task_eval res
		<where>
		    <include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmTaskEval" resultType="com.xm.core.entity.XmTaskEval">
		select * from xm_task_eval res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmTaskEval" resultType="com.xm.core.entity.XmTaskEval">
		select * from xm_task_eval res
		where 
			res.id = #{id}
	</select>
    <select id="selectListByIds" parameterType="List" resultType="com.xm.core.entity.XmTaskEval">
        select * from xm_task_eval res
        where  (res.id) in
             <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
    </select>
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_task_eval res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmTaskEval" resultType="long">
		select count(*) from xm_task_eval res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmTaskEval" useGeneratedKeys="false"   keyProperty="id">
		insert into xm_task_eval(
			<include refid="columns"/>
		) values (
		#{id},#{type},#{wspeed},#{wattit},#{wquality},#{totalStar},#{remark},#{evalUserid},#{evalUsername},#{toUserid},#{toUsername},#{evalBranchId},#{toBranchId},#{taskId},#{evalTime},#{paySpeed},#{coopHappy}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmTaskEval">
		delete from xm_task_eval res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmTaskEval">
		delete from xm_task_eval 
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmTaskEval">
		update  xm_task_eval 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmTaskEval">
		update  xm_task_eval 
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_task_eval 
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>

	<!-- 批量修改某几个字段 -->
	<delete id="editSomeFields" parameterType="HashMap">
		update  xm_task_eval
        <set>
            <include refid="someFieldSet"/>
        </set>
        where  (id) in
             <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
	</delete>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_task_eval 
			where
			(id) in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    (  #{item.id} )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,type,wspeed,wattit,wquality,total_star,remark,eval_userid,eval_username,to_userid,to_username,eval_branch_id,to_branch_id,task_id,eval_time,pay_speed,coop_happy
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="type != null and type != ''">      and res.type = #{type}     </if>
		<if test="wspeed != null and wspeed != ''">      and res.wspeed = #{wspeed}     </if>
		<if test="wattit != null and wattit != ''">      and res.wattit = #{wattit}     </if>
		<if test="wquality != null and wquality != ''">      and res.wquality = #{wquality}     </if>
		<if test="totalStar != null and totalStar != ''">      and res.total_star = #{totalStar}     </if>
		<if test="remark != null and remark != ''">      and res.remark = #{remark}     </if>
		<if test="evalUserid != null and evalUserid != ''">      and res.eval_userid = #{evalUserid}     </if>
		<if test="evalUsername != null and evalUsername != ''">      and res.eval_username = #{evalUsername}     </if>
		<if test="toUserid != null and toUserid != ''">      and res.to_userid = #{toUserid}     </if>
		<if test="toUsername != null and toUsername != ''">      and res.to_username = #{toUsername}     </if>
		<if test="evalBranchId != null and evalBranchId != ''">      and res.eval_branch_id = #{evalBranchId}     </if>
		<if test="toBranchId != null and toBranchId != ''">      and res.to_branch_id = #{toBranchId}     </if>
		<if test="taskId != null and taskId != ''">      and res.task_id = #{taskId}     </if>
		<if test="evalTime != null">      and date_format(res.eval_time,'%Y-%m-%d') = date_format(#{evalTime},'%Y-%m-%d')     </if>
		<if test="paySpeed != null and paySpeed != ''">      and res.pay_speed = #{paySpeed}     </if>
		<if test="coopHappy != null and coopHappy != ''">      and res.coop_happy = #{coopHappy}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		type = #{type},
		wspeed = #{wspeed},
		wattit = #{wattit},
		wquality = #{wquality},
		total_star = #{totalStar},
		remark = #{remark},
		eval_userid = #{evalUserid},
		eval_username = #{evalUsername},
		to_userid = #{toUserid},
		to_username = #{toUsername},
		eval_branch_id = #{evalBranchId},
		to_branch_id = #{toBranchId},
		task_id = #{taskId},
		eval_time = #{evalTime},
		pay_speed = #{paySpeed},
		coop_happy = #{coopHappy}
	</sql>
	<sql id="someFieldSet">
		<if test="type != null and type != ''"> type = #{type},     </if>
		<if test="wspeed != null and wspeed != ''"> wspeed = #{wspeed},     </if>
		<if test="wattit != null and wattit != ''"> wattit = #{wattit},     </if>
		<if test="wquality != null and wquality != ''"> wquality = #{wquality},     </if>
		<if test="totalStar != null and totalStar != ''"> total_star = #{totalStar},     </if>
		<if test="remark != null and remark != ''"> remark = #{remark},     </if>
		<if test="evalUserid != null and evalUserid != ''"> eval_userid = #{evalUserid},     </if>
		<if test="evalUsername != null and evalUsername != ''"> eval_username = #{evalUsername},     </if>
		<if test="toUserid != null and toUserid != ''"> to_userid = #{toUserid},     </if>
		<if test="toUsername != null and toUsername != ''"> to_username = #{toUsername},     </if>
		<if test="evalBranchId != null and evalBranchId != ''"> eval_branch_id = #{evalBranchId},     </if>
		<if test="toBranchId != null and toBranchId != ''"> to_branch_id = #{toBranchId},     </if>
		<if test="taskId != null and taskId != ''"> task_id = #{taskId},     </if>
		<if test="evalTime != null"> eval_time = #{evalTime},     </if>
		<if test="paySpeed != null and paySpeed != ''"> pay_speed = #{paySpeed},     </if>
		<if test="coopHappy != null and coopHappy != ''"> coop_happy = #{coopHappy},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			type = #{item.type},
			wspeed = #{item.wspeed},
			wattit = #{item.wattit},
			wquality = #{item.wquality},
			total_star = #{item.totalStar},
			remark = #{item.remark},
			eval_userid = #{item.evalUserid},
			eval_username = #{item.evalUsername},
			to_userid = #{item.toUserid},
			to_username = #{item.toUsername},
			eval_branch_id = #{item.evalBranchId},
			to_branch_id = #{item.toBranchId},
			task_id = #{item.taskId},
			eval_time = #{item.evalTime},
			pay_speed = #{item.paySpeed},
			coop_happy = #{item.coopHappy}
	</sql>
</mapper>