<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmTaskExecuser">
	
	
	<!--开始 自定sql函数区域 请在此区域添加自定义函数,其它区域尽量不要动，因为代码随时重新生成 -->

    <sql id="whereForMap">
         <if test=" pkList != null">  and (res.task_id, res.userid) in
             <foreach collection="pkList" item="item" index="index" open="(" separator="," close=")" >
                ( #{item.taskId},  #{item.userid})
             </foreach>
         </if>
        <if test="key != null and key !='' ">    and (res.task_name like concat('%',#{key},'%') or res.username like  concat('%',#{key},'%') ) </if>
		<if test="taskState != null and taskState !='' "> and task_state=#{taskState}</if>

	</sql>
	<update id="updateXmTaskExeUseridsAndUsernamesByTaskId"
			parameterType="String">
		UPDATE xm_task t
		left join
		(
		SELECT
		task_id,
		max(
		CASE

		WHEN e.STATUS != '7'
		AND e.STATUS != '0'
		AND e.STATUS != '8' THEN
		e.userid ELSE NULL
		END
		) AS executor_userid,
		max(
		CASE

		WHEN e.STATUS != '7'
		AND e.STATUS != '0'
		AND e.STATUS != '8' THEN
		e.username ELSE NULL
		END
		) AS executor_username,
		group_concat( concat( e.userid, '(', e.STATUS, ')' ) SEPARATOR ',' ) AS exe_userids,
		group_concat(
		concat(
		e.username,
		CASE

		WHEN e.STATUS = '0' THEN
		'(候选)'
		WHEN e.STATUS = '1' THEN
		'(执行中)'
		WHEN e.STATUS = '2' THEN
		'(已提交)'
		WHEN e.STATUS = '3' THEN
		'(已验收)'
		WHEN e.STATUS = '4' THEN
		'(验收不过)'
		WHEN e.STATUS = '6' THEN
		'(已结算)'
		WHEN e.STATUS = '7' THEN
		'(放弃任务)'
		WHEN e.STATUS = '8' THEN
		'(黑名单)' ELSE '(其它)'
		END
		) SEPARATOR ','
		) AS exe_usernames
		FROM
		XM.xm_task_execuser e
		WHERE
		e.task_id = #{taskId} ) e1
		on t.id=e1.task_id
		SET t.exe_userids = e1.exe_userids,
		t.exe_usernames = e1.exe_usernames,
		t.executor_userid = e1.executor_userid,
		t.executor_username = e1.executor_username,
		t.task_state=case when e1.executor_userid is null and t.task_state='1' then '0' when e1.executor_userid is not null and t.task_state='0' then '1' else t.task_state end
		WHERE t.id = #{taskId}
	</update>
	<select id="selectListMapByWhereWithTask" parameterType="HashMap" resultType="HashMap">
		select res.*,t.* from xm_task_execuser res left join xm_task t on res.task_id=t.id
		<where>
			<include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_task_execuser res
		<where>
		    <include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmTaskExecuser" resultType="com.xm.core.entity.XmTaskExecuser">
		select * from xm_task_execuser res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmTaskExecuser" resultType="com.xm.core.entity.XmTaskExecuser">
		select * from xm_task_execuser res
		where 
			res.task_id = #{taskId}
			and res.userid = #{userid}
	</select>
    <select id="selectListByIds" parameterType="List" resultType="com.xm.core.entity.XmTaskExecuser">
        select * from xm_task_execuser res
        where  (res.task_id, res.userid) in
             <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                ( #{item.taskId},  #{item.userid})
             </foreach>
    </select>
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_task_execuser res
		where 
			 res.task_id = #{taskId}
			and  res.userid = #{userid}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmTaskExecuser" resultType="long">
		select count(*) from xm_task_execuser res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键task_id,userid,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmTaskExecuser" useGeneratedKeys="false"  >
		insert into xm_task_execuser(
			<include refid="columns"/>
		) values (
		#{createTime},#{taskId},#{userid},#{startTime},#{endTime},#{status},#{remarks},#{createUserid},#{createUsername},#{username},#{matchScore},#{quoteWeekday},#{quoteAmount},#{quoteTime},#{projectId},#{phaseId},#{skillRemark},#{quoteWorkload},#{quoteStartTime},#{quoteEndTime},#{branchId},#{phaseName},#{taskName},#{distUserid},#{distUsername},#{execUserBranchId},#{shareKey}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmTaskExecuser">
		delete from xm_task_execuser res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmTaskExecuser">
		delete from xm_task_execuser 
		where task_id = #{taskId} and userid = #{userid} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmTaskExecuser">
		update  xm_task_execuser 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where task_id = #{taskId} and userid = #{userid} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmTaskExecuser">
		update  xm_task_execuser 
		<set>
			<include refid="set"/>
		</set>
		where task_id = #{taskId} and userid = #{userid} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_task_execuser 
		set 
			<include refid="batchSet"/>
			where task_id = #{item.taskId} and userid = #{item.userid}  
		</foreach> 
	</update>

	<!-- 批量修改某几个字段 -->
	<delete id="editSomeFields" parameterType="HashMap">
		update  xm_task_execuser
        <set>
            <include refid="someFieldSet"/>
        </set>
        where  (task_id, userid) in
             <foreach collection="pkList" item="item" index="index" open="(" separator="," close=")" >
                ( #{item.taskId},  #{item.userid})
             </foreach>
	</delete>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_task_execuser 
			where
			(task_id, userid) in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    (  #{item.taskId},  #{item.userid} )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		create_time,task_id,userid,start_time,end_time,status,remarks,create_userid,create_username,username,match_score,quote_weekday,quote_amount,quote_time,project_id,phase_id,skill_remark,quote_workload,quote_start_time,quote_end_time,branch_id,phase_name,task_name,dist_userid,dist_username,exec_user_branch_id,share_key
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="createTime != null">      and date_format(res.create_time,'%Y-%m-%d') = date_format(#{createTime},'%Y-%m-%d')     </if>
		<if test="taskId != null and taskId != ''">      and res.task_id = #{taskId}     </if>
		<if test="userid != null and userid != ''">      and res.userid = #{userid}     </if>
		<if test="startTime != null">      and date_format(res.start_time,'%Y-%m-%d') = date_format(#{startTime},'%Y-%m-%d')     </if>
		<if test="endTime != null">      and date_format(res.end_time,'%Y-%m-%d') = date_format(#{endTime},'%Y-%m-%d')     </if>
		<if test="status != null and status != ''">      and res.status = #{status}     </if>
		<if test="remarks != null and remarks != ''">      and res.remarks = #{remarks}     </if>
		<if test="createUserid != null and createUserid != ''">      and res.create_userid = #{createUserid}     </if>
		<if test="createUsername != null and createUsername != ''">      and res.create_username = #{createUsername}     </if>
		<if test="username != null and username != ''">      and res.username = #{username}     </if>
		<if test="matchScore != null and matchScore != ''">      and res.match_score = #{matchScore}     </if>
		<if test="quoteWeekday != null and quoteWeekday != ''">      and res.quote_weekday = #{quoteWeekday}     </if>
		<if test="quoteAmount != null and quoteAmount != ''">      and res.quote_amount = #{quoteAmount}     </if>
		<if test="quoteTime != null">      and date_format(res.quote_time,'%Y-%m-%d') = date_format(#{quoteTime},'%Y-%m-%d')     </if>
		<if test="projectId != null and projectId != ''">      and res.project_id = #{projectId}     </if>
		<if test="phaseId != null and phaseId != ''">      and res.phase_id = #{phaseId}     </if>
		<if test="skillRemark != null and skillRemark != ''">      and res.skill_remark = #{skillRemark}     </if>
		<if test="quoteWorkload != null and quoteWorkload != ''">      and res.quote_workload = #{quoteWorkload}     </if>
		<if test="quoteStartTime != null">      and date_format(res.quote_start_time,'%Y-%m-%d') = date_format(#{quoteStartTime},'%Y-%m-%d')     </if>
		<if test="quoteEndTime != null">      and date_format(res.quote_end_time,'%Y-%m-%d') = date_format(#{quoteEndTime},'%Y-%m-%d')     </if>
		<if test="branchId != null and branchId != ''">      and res.branch_id = #{branchId}     </if>
		<if test="phaseName != null and phaseName != ''">      and res.phase_name = #{phaseName}     </if>
		<if test="taskName != null and taskName != ''">      and res.task_name = #{taskName}     </if>
		<if test="distUserid != null and distUserid != ''">      and res.dist_userid = #{distUserid}     </if>
		<if test="distUsername != null and distUsername != ''">      and res.dist_username = #{distUsername}     </if>
		<if test="execUserBranchId != null and execUserBranchId != ''">      and res.exec_user_branch_id = #{execUserBranchId}     </if>
		<if test="shareKey != null and shareKey != ''">      and res.share_key = #{shareKey}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		create_time = #{createTime},
		start_time = #{startTime},
		end_time = #{endTime},
		status = #{status},
		remarks = #{remarks},
		create_userid = #{createUserid},
		create_username = #{createUsername},
		username = #{username},
		match_score = #{matchScore},
		quote_weekday = #{quoteWeekday},
		quote_amount = #{quoteAmount},
		quote_time = #{quoteTime},
		project_id = #{projectId},
		phase_id = #{phaseId},
		skill_remark = #{skillRemark},
		quote_workload = #{quoteWorkload},
		quote_start_time = #{quoteStartTime},
		quote_end_time = #{quoteEndTime},
		branch_id = #{branchId},
		phase_name = #{phaseName},
		task_name = #{taskName},
		dist_userid = #{distUserid},
		dist_username = #{distUsername},
		exec_user_branch_id = #{execUserBranchId},
		share_key = #{shareKey}
	</sql>
	<sql id="someFieldSet">
		<if test="createTime != null"> create_time = #{createTime},     </if>
		<if test="startTime != null"> start_time = #{startTime},     </if>
		<if test="endTime != null"> end_time = #{endTime},     </if>
		<if test="status != null and status != ''"> status = #{status},     </if>
		<if test="remarks != null and remarks != ''"> remarks = #{remarks},     </if>
		<if test="createUserid != null and createUserid != ''"> create_userid = #{createUserid},     </if>
		<if test="createUsername != null and createUsername != ''"> create_username = #{createUsername},     </if>
		<if test="username != null and username != ''"> username = #{username},     </if>
		<if test="matchScore != null and matchScore != ''"> match_score = #{matchScore},     </if>
		<if test="quoteWeekday != null and quoteWeekday != ''"> quote_weekday = #{quoteWeekday},     </if>
		<if test="quoteAmount != null and quoteAmount != ''"> quote_amount = #{quoteAmount},     </if>
		<if test="quoteTime != null"> quote_time = #{quoteTime},     </if>
		<if test="projectId != null and projectId != ''"> project_id = #{projectId},     </if>
		<if test="phaseId != null and phaseId != ''"> phase_id = #{phaseId},     </if>
		<if test="skillRemark != null and skillRemark != ''"> skill_remark = #{skillRemark},     </if>
		<if test="quoteWorkload != null and quoteWorkload != ''"> quote_workload = #{quoteWorkload},     </if>
		<if test="quoteStartTime != null"> quote_start_time = #{quoteStartTime},     </if>
		<if test="quoteEndTime != null"> quote_end_time = #{quoteEndTime},     </if>
		<if test="branchId != null and branchId != ''"> branch_id = #{branchId},     </if>
		<if test="phaseName != null and phaseName != ''"> phase_name = #{phaseName},     </if>
		<if test="taskName != null and taskName != ''"> task_name = #{taskName},     </if>
		<if test="distUserid != null and distUserid != ''"> dist_userid = #{distUserid},     </if>
		<if test="distUsername != null and distUsername != ''"> dist_username = #{distUsername},     </if>
		<if test="execUserBranchId != null and execUserBranchId != ''"> exec_user_branch_id = #{execUserBranchId},     </if>
		<if test="shareKey != null and shareKey != ''"> share_key = #{shareKey},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			create_time = #{item.createTime},
			start_time = #{item.startTime},
			end_time = #{item.endTime},
			status = #{item.status},
			remarks = #{item.remarks},
			create_userid = #{item.createUserid},
			create_username = #{item.createUsername},
			username = #{item.username},
			match_score = #{item.matchScore},
			quote_weekday = #{item.quoteWeekday},
			quote_amount = #{item.quoteAmount},
			quote_time = #{item.quoteTime},
			project_id = #{item.projectId},
			phase_id = #{item.phaseId},
			skill_remark = #{item.skillRemark},
			quote_workload = #{item.quoteWorkload},
			quote_start_time = #{item.quoteStartTime},
			quote_end_time = #{item.quoteEndTime},
			branch_id = #{item.branchId},
			phase_name = #{item.phaseName},
			task_name = #{item.taskName},
			dist_userid = #{item.distUserid},
			dist_username = #{item.distUsername},
			exec_user_branch_id = #{item.execUserBranchId},
			share_key = #{item.shareKey}
	</sql>
</mapper>