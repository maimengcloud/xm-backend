<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qqkj.xm.core.entity.XmProductTemplate">
	
	
	<!--开始 自定sql函数区域 -->
		<!--请在此区域添加自定义函数-->
		
		
		
	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from XM.xm_product_template res
		<where> 
			<if test="ids != null">  and     
				id in
				    <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >  
				        #{item}  
				    </foreach>  
			 </if>
			<include refid="where"/>
			<if test="key != null and key !='' ">       </if> 
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.qqkj.xm.core.entity.XmProductTemplate" resultType="com.qqkj.xm.core.entity.XmProductTemplate">
		select * from XM.xm_product_template res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.qqkj.xm.core.entity.XmProductTemplate" resultType="com.qqkj.xm.core.entity.XmProductTemplate">
		select * from XM.xm_product_template res
		where 
			res.id = #{id}
	</select>
	
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from XM.xm_product_template res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.qqkj.xm.core.entity.XmProductTemplate" resultType="long">
		select count(1) from XM.xm_product_template res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.qqkj.xm.core.entity.XmProductTemplate" useGeneratedKeys="false"   keyProperty="id">
		insert into XM.xm_product_template(
			<include refid="columns"/>
		) values (
		#{id},#{productName},#{branchId},#{remark},#{templateId},#{tcuserid},#{tcusername},#{tremark},#{tctime},#{tcbranchId},#{shareScope}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.qqkj.xm.core.entity.XmProductTemplate">
		delete from XM.xm_product_template res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.qqkj.xm.core.entity.XmProductTemplate">
		delete from XM.xm_product_template 
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.qqkj.xm.core.entity.XmProductTemplate">
		update  XM.xm_product_template 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.qqkj.xm.core.entity.XmProductTemplate">
		update  XM.xm_product_template 
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  XM.xm_product_template 
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from XM.xm_product_template 
			where id in
			    <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >  
			        #{item.id }  
			    </foreach>  
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,product_name,branch_id,remark,template_id,tcuserid,tcusername,tremark,tctime,tcbranch_id,share_scope
	</sql>
	
	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="productName != null and productName != ''">      and res.product_name = #{productName}     </if>
		<if test="branchId != null and branchId != ''">      and res.branch_id = #{branchId}     </if>
		<if test="remark != null and remark != ''">      and res.remark = #{remark}     </if>
		<if test="templateId != null and templateId != ''">      and res.template_id = #{templateId}     </if>
		<if test="tcuserid != null and tcuserid != ''">      and res.tcuserid = #{tcuserid}     </if>
		<if test="tcusername != null and tcusername != ''">      and res.tcusername = #{tcusername}     </if>
		<if test="tremark != null and tremark != ''">      and res.tremark = #{tremark}     </if>
		<if test="tctime != null">      and TO_CHAR(res.tctime,'YYYY-MM-DD') = TO_CHAR(#{tctime},'YYYY-MM-DD')     </if>
		<if test="tcbranchId != null and tcbranchId != ''">      and res.tcbranch_id = #{tcbranchId}     </if>
		<if test="shareScope != null and shareScope != ''">      and res.share_scope = #{shareScope}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		product_name = #{productName},
		branch_id = #{branchId},
		remark = #{remark},
		template_id = #{templateId},
		tcuserid = #{tcuserid},
		tcusername = #{tcusername},
		tremark = #{tremark},
		tctime = #{tctime},
		tcbranch_id = #{tcbranchId},
		share_scope = #{shareScope}
	</sql>
	<sql id="someFieldSet">
		<if test="productName != null and productName != ''"> product_name = #{productName},     </if>
		<if test="branchId != null and branchId != ''"> branch_id = #{branchId},     </if>
		<if test="remark != null and remark != ''"> remark = #{remark},     </if>
		<if test="templateId != null and templateId != ''"> template_id = #{templateId},     </if>
		<if test="tcuserid != null and tcuserid != ''"> tcuserid = #{tcuserid},     </if>
		<if test="tcusername != null and tcusername != ''"> tcusername = #{tcusername},     </if>
		<if test="tremark != null and tremark != ''"> tremark = #{tremark},     </if>
		<if test="tctime != null"> tctime = #{tctime},     </if>
		<if test="tcbranchId != null and tcbranchId != ''"> tcbranch_id = #{tcbranchId},     </if>
		<if test="shareScope != null and shareScope != ''"> share_scope = #{shareScope},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			product_name = #{item.productName},
			branch_id = #{item.branchId},
			remark = #{item.remark},
			template_id = #{item.templateId},
			tcuserid = #{item.tcuserid},
			tcusername = #{item.tcusername},
			tremark = #{item.tremark},
			tctime = #{item.tctime},
			tcbranch_id = #{item.tcbranchId},
			share_scope = #{item.shareScope}
	</sql>
</mapper>