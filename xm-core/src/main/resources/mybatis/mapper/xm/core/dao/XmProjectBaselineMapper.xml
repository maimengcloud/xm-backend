<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmProjectBaseline">
	
	
	<!--开始 自定sql函数区域 -->
		<!--请在此区域添加自定义函数-->
		
		
		
	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_project_baseline res
		<where> 
			<if test="ids != null">  and     
				id in
				    <foreach collection="ids" item="item" index="index" open="(" separator="," close=")" >  
				        #{item}  
				    </foreach>  
			 </if>
			<include refid="where"/>
			<if test="key != null and key !='' ">       </if> 
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmProjectBaseline" resultType="com.xm.core.entity.XmProjectBaseline">
		select * from xm_project_baseline res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmProjectBaseline" resultType="com.xm.core.entity.XmProjectBaseline">
		select * from xm_project_baseline res
		where 
			res.id = #{id}
	</select>
	
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_project_baseline res
		where 
			 res.id = #{id}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmProjectBaseline" resultType="long">
		select count(1) from xm_project_baseline res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmProjectBaseline" useGeneratedKeys="false"   keyProperty="id">
		insert into xm_project_baseline(
			<include refid="columns"/>
		) values (
		#{id},#{code},#{name},#{xmType},#{startTime},#{endTime},#{urgent},#{priority},#{description},#{createUserid},#{createUsername},#{createTime},#{assess},#{assessRemarks},#{status},#{branchId},#{planTotalCost},#{bizProcInstId},#{bizFlowState},#{planNouserAt},#{planInnerUserAt},#{planOutUserAt},#{locked},#{baseTime},#{baseRemark},#{baselineId},#{planWorkload},#{totalReceivables},#{budgetMarginRate},#{contractAmt},#{planInnerUserPrice},#{planOutUserPrice},#{planOutUserCnt},#{planInnerUserCnt},#{planWorkingHours},#{taxRate},#{planInnerUserWorkload},#{planOutUserWorkload},#{fromTplId},#{budgetCtrl},#{deptid},#{projectId}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmProjectBaseline">
		delete from xm_project_baseline
		<where>  
			1=2
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmProjectBaseline">
		delete from xm_project_baseline
		where id = #{id} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmProjectBaseline">
		update  xm_project_baseline
		<set>
			<include refid="someFieldSet"/>
		</set>
		where id = #{id} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmProjectBaseline">
		update  xm_project_baseline
		<set>
			<include refid="set"/>
		</set>
		where id = #{id} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_project_baseline
		set 
			<include refid="batchSet"/>
			where id = #{item.id}  
		</foreach> 
	</update>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_project_baseline
			where
			(id)
			    in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    ( #{item.id}
                    )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		id,code,name,xm_type,start_time,end_time,urgent,priority,description,create_userid,create_username,create_time,assess,assess_remarks,status,branch_id,plan_total_cost,biz_proc_inst_id,biz_flow_state,plan_nouser_at,plan_inner_user_at,plan_out_user_at,locked,base_time,base_remark,baseline_id,plan_workload,total_receivables,budget_margin_rate,contract_amt,plan_inner_user_price,plan_out_user_price,plan_out_user_cnt,plan_inner_user_cnt,plan_working_hours,tax_rate,plan_inner_user_workload,plan_out_user_workload,from_tpl_id,budget_ctrl,deptid,project_id
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="id != null and id != ''">      and res.id = #{id}     </if>
		<if test="code != null and code != ''">      and res.code = #{code}     </if>
		<if test="name != null and name != ''">      and res.name = #{name}     </if>
		<if test="xmType != null and xmType != ''">      and res.xm_type = #{xmType}     </if>
		<if test="startTime != null">      and date_format(res.start_time,'%Y-%m-%d') = date_format(#{startTime},'%Y-%m-%d')     </if>
		<if test="endTime != null">      and date_format(res.end_time,'%Y-%m-%d') = date_format(#{endTime},'%Y-%m-%d')     </if>
		<if test="urgent != null and urgent != ''">      and res.urgent = #{urgent}     </if>
		<if test="priority != null and priority != ''">      and res.priority = #{priority}     </if>
		<if test="description != null and description != ''">      and res.description = #{description}     </if>
		<if test="createUserid != null and createUserid != ''">      and res.create_userid = #{createUserid}     </if>
		<if test="createUsername != null and createUsername != ''">      and res.create_username = #{createUsername}     </if>
		<if test="createTime != null">      and date_format(res.create_time,'%Y-%m-%d') = date_format(#{createTime},'%Y-%m-%d')     </if>
		<if test="assess != null and assess != ''">      and res.assess = #{assess}     </if>
		<if test="assessRemarks != null and assessRemarks != ''">      and res.assess_remarks = #{assessRemarks}     </if>
		<if test="status != null and status != ''">      and res.status = #{status}     </if>
		<if test="branchId != null and branchId != ''">      and res.branch_id = #{branchId}     </if>
		<if test="planTotalCost != null and planTotalCost != ''">      and res.plan_total_cost = #{planTotalCost}     </if>
		<if test="bizProcInstId != null and bizProcInstId != ''">      and res.biz_proc_inst_id = #{bizProcInstId}     </if>
		<if test="bizFlowState != null and bizFlowState != ''">      and res.biz_flow_state = #{bizFlowState}     </if>
		<if test="planNouserAt != null and planNouserAt != ''">      and res.plan_nouser_at = #{planNouserAt}     </if>
		<if test="planInnerUserAt != null and planInnerUserAt != ''">      and res.plan_inner_user_at = #{planInnerUserAt}     </if>
		<if test="planOutUserAt != null and planOutUserAt != ''">      and res.plan_out_user_at = #{planOutUserAt}     </if>
		<if test="locked != null and locked != ''">      and res.locked = #{locked}     </if>
		<if test="baseTime != null">      and date_format(res.base_time,'%Y-%m-%d') = date_format(#{baseTime},'%Y-%m-%d')     </if>
		<if test="baseRemark != null and baseRemark != ''">      and res.base_remark = #{baseRemark}     </if>
		<if test="baselineId != null and baselineId != ''">      and res.baseline_id = #{baselineId}     </if>
		<if test="planWorkload != null and planWorkload != ''">      and res.plan_workload = #{planWorkload}     </if>
		<if test="totalReceivables != null and totalReceivables != ''">      and res.total_receivables = #{totalReceivables}     </if>
		<if test="budgetMarginRate != null and budgetMarginRate != ''">      and res.budget_margin_rate = #{budgetMarginRate}     </if>
		<if test="contractAmt != null and contractAmt != ''">      and res.contract_amt = #{contractAmt}     </if>
		<if test="planInnerUserPrice != null and planInnerUserPrice != ''">      and res.plan_inner_user_price = #{planInnerUserPrice}     </if>
		<if test="planOutUserPrice != null and planOutUserPrice != ''">      and res.plan_out_user_price = #{planOutUserPrice}     </if>
		<if test="planOutUserCnt != null and planOutUserCnt != ''">      and res.plan_out_user_cnt = #{planOutUserCnt}     </if>
		<if test="planInnerUserCnt != null and planInnerUserCnt != ''">      and res.plan_inner_user_cnt = #{planInnerUserCnt}     </if>
		<if test="planWorkingHours != null and planWorkingHours != ''">      and res.plan_working_hours = #{planWorkingHours}     </if>
		<if test="taxRate != null and taxRate != ''">      and res.tax_rate = #{taxRate}     </if>
		<if test="planInnerUserWorkload != null and planInnerUserWorkload != ''">      and res.plan_inner_user_workload = #{planInnerUserWorkload}     </if>
		<if test="planOutUserWorkload != null and planOutUserWorkload != ''">      and res.plan_out_user_workload = #{planOutUserWorkload}     </if>
		<if test="fromTplId != null and fromTplId != ''">      and res.from_tpl_id = #{fromTplId}     </if>
		<if test="budgetCtrl != null and budgetCtrl != ''">      and res.budget_ctrl = #{budgetCtrl}     </if>
		<if test="deptid != null and deptid != ''">      and res.deptid = #{deptid}     </if>
		<if test="projectId != null and projectId != ''">      and res.project_id = #{projectId}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		code = #{code},
		name = #{name},
		xm_type = #{xmType},
		start_time = #{startTime},
		end_time = #{endTime},
		urgent = #{urgent},
		priority = #{priority},
		description = #{description},
		create_userid = #{createUserid},
		create_username = #{createUsername},
		create_time = #{createTime},
		assess = #{assess},
		assess_remarks = #{assessRemarks},
		status = #{status},
		branch_id = #{branchId},
		plan_total_cost = #{planTotalCost},
		biz_proc_inst_id = #{bizProcInstId},
		biz_flow_state = #{bizFlowState},
		plan_nouser_at = #{planNouserAt},
		plan_inner_user_at = #{planInnerUserAt},
		plan_out_user_at = #{planOutUserAt},
		locked = #{locked},
		base_time = #{baseTime},
		base_remark = #{baseRemark},
		baseline_id = #{baselineId},
		plan_workload = #{planWorkload},
		total_receivables = #{totalReceivables},
		budget_margin_rate = #{budgetMarginRate},
		contract_amt = #{contractAmt},
		plan_inner_user_price = #{planInnerUserPrice},
		plan_out_user_price = #{planOutUserPrice},
		plan_out_user_cnt = #{planOutUserCnt},
		plan_inner_user_cnt = #{planInnerUserCnt},
		plan_working_hours = #{planWorkingHours},
		tax_rate = #{taxRate},
		plan_inner_user_workload = #{planInnerUserWorkload},
		plan_out_user_workload = #{planOutUserWorkload},
		from_tpl_id = #{fromTplId},
		budget_ctrl = #{budgetCtrl},
		deptid = #{deptid},
		project_id = #{projectId}
	</sql>
	<sql id="someFieldSet">
		<if test="code != null and code != ''"> code = #{code},     </if>
		<if test="name != null and name != ''"> name = #{name},     </if>
		<if test="xmType != null and xmType != ''"> xm_type = #{xmType},     </if>
		<if test="startTime != null"> start_time = #{startTime},     </if>
		<if test="endTime != null"> end_time = #{endTime},     </if>
		<if test="urgent != null and urgent != ''"> urgent = #{urgent},     </if>
		<if test="priority != null and priority != ''"> priority = #{priority},     </if>
		<if test="description != null and description != ''"> description = #{description},     </if>
		<if test="createUserid != null and createUserid != ''"> create_userid = #{createUserid},     </if>
		<if test="createUsername != null and createUsername != ''"> create_username = #{createUsername},     </if>
		<if test="createTime != null"> create_time = #{createTime},     </if>
		<if test="assess != null and assess != ''"> assess = #{assess},     </if>
		<if test="assessRemarks != null and assessRemarks != ''"> assess_remarks = #{assessRemarks},     </if>
		<if test="status != null and status != ''"> status = #{status},     </if>
		<if test="branchId != null and branchId != ''"> branch_id = #{branchId},     </if>
		<if test="planTotalCost != null and planTotalCost != ''"> plan_total_cost = #{planTotalCost},     </if>
		<if test="bizProcInstId != null and bizProcInstId != ''"> biz_proc_inst_id = #{bizProcInstId},     </if>
		<if test="bizFlowState != null and bizFlowState != ''"> biz_flow_state = #{bizFlowState},     </if>
		<if test="planNouserAt != null and planNouserAt != ''"> plan_nouser_at = #{planNouserAt},     </if>
		<if test="planInnerUserAt != null and planInnerUserAt != ''"> plan_inner_user_at = #{planInnerUserAt},     </if>
		<if test="planOutUserAt != null and planOutUserAt != ''"> plan_out_user_at = #{planOutUserAt},     </if>
		<if test="locked != null and locked != ''"> locked = #{locked},     </if>
		<if test="baseTime != null"> base_time = #{baseTime},     </if>
		<if test="baseRemark != null and baseRemark != ''"> base_remark = #{baseRemark},     </if>
		<if test="baselineId != null and baselineId != ''"> baseline_id = #{baselineId},     </if>
		<if test="planWorkload != null and planWorkload != ''"> plan_workload = #{planWorkload},     </if>
		<if test="totalReceivables != null and totalReceivables != ''"> total_receivables = #{totalReceivables},     </if>
		<if test="budgetMarginRate != null and budgetMarginRate != ''"> budget_margin_rate = #{budgetMarginRate},     </if>
		<if test="contractAmt != null and contractAmt != ''"> contract_amt = #{contractAmt},     </if>
		<if test="planInnerUserPrice != null and planInnerUserPrice != ''"> plan_inner_user_price = #{planInnerUserPrice},     </if>
		<if test="planOutUserPrice != null and planOutUserPrice != ''"> plan_out_user_price = #{planOutUserPrice},     </if>
		<if test="planOutUserCnt != null and planOutUserCnt != ''"> plan_out_user_cnt = #{planOutUserCnt},     </if>
		<if test="planInnerUserCnt != null and planInnerUserCnt != ''"> plan_inner_user_cnt = #{planInnerUserCnt},     </if>
		<if test="planWorkingHours != null and planWorkingHours != ''"> plan_working_hours = #{planWorkingHours},     </if>
		<if test="taxRate != null and taxRate != ''"> tax_rate = #{taxRate},     </if>
		<if test="planInnerUserWorkload != null and planInnerUserWorkload != ''"> plan_inner_user_workload = #{planInnerUserWorkload},     </if>
		<if test="planOutUserWorkload != null and planOutUserWorkload != ''"> plan_out_user_workload = #{planOutUserWorkload},     </if>
		<if test="fromTplId != null and fromTplId != ''"> from_tpl_id = #{fromTplId},     </if>
		<if test="budgetCtrl != null and budgetCtrl != ''"> budget_ctrl = #{budgetCtrl},     </if>
		<if test="deptid != null and deptid != ''"> deptid = #{deptid},     </if>
		<if test="projectId != null and projectId != ''"> project_id = #{projectId},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			code = #{item.code},
			name = #{item.name},
			xm_type = #{item.xmType},
			start_time = #{item.startTime},
			end_time = #{item.endTime},
			urgent = #{item.urgent},
			priority = #{item.priority},
			description = #{item.description},
			create_userid = #{item.createUserid},
			create_username = #{item.createUsername},
			create_time = #{item.createTime},
			assess = #{item.assess},
			assess_remarks = #{item.assessRemarks},
			status = #{item.status},
			branch_id = #{item.branchId},
			plan_total_cost = #{item.planTotalCost},
			biz_proc_inst_id = #{item.bizProcInstId},
			biz_flow_state = #{item.bizFlowState},
			plan_nouser_at = #{item.planNouserAt},
			plan_inner_user_at = #{item.planInnerUserAt},
			plan_out_user_at = #{item.planOutUserAt},
			locked = #{item.locked},
			base_time = #{item.baseTime},
			base_remark = #{item.baseRemark},
			baseline_id = #{item.baselineId},
			plan_workload = #{item.planWorkload},
			total_receivables = #{item.totalReceivables},
			budget_margin_rate = #{item.budgetMarginRate},
			contract_amt = #{item.contractAmt},
			plan_inner_user_price = #{item.planInnerUserPrice},
			plan_out_user_price = #{item.planOutUserPrice},
			plan_out_user_cnt = #{item.planOutUserCnt},
			plan_inner_user_cnt = #{item.planInnerUserCnt},
			plan_working_hours = #{item.planWorkingHours},
			tax_rate = #{item.taxRate},
			plan_inner_user_workload = #{item.planInnerUserWorkload},
			plan_out_user_workload = #{item.planOutUserWorkload},
			from_tpl_id = #{item.fromTplId},
			budget_ctrl = #{item.budgetCtrl},
			deptid = #{item.deptid},
			project_id = #{item.projectId}
	</sql>
</mapper>