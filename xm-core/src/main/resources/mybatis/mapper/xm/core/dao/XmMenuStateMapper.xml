<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.core.entity.XmMenuState">
	
	
	<!--开始 自定sql函数区域 请在此区域添加自定义函数,其它区域尽量不要动，因为代码随时重新生成 -->

    <sql id="whereForMap">
         <if test=" menuIds != null">  and (res.menu_id) in
             <foreach collection="menuIds" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
         </if>
        <if test="key != null and key !='' ">       </if>
    </sql>

	<update id="loadTasksToXmMenuState" parameterType="String" statementType="CALLABLE">
		{call load_tasks_to_xm_menu_state(#{productId,mode=IN})}
	</update>


	<!-- 适合没有交叉的，没用父子关系的一批任务的更新 -->
	<update id="batchSumParents" parameterType="List">
		update xm_menu_state s  left join
		(select m.pmenu_id,
		sum(1) as children_cnt,
		sum(ss.plan_workload) as plan_workload ,
		sum(ss.plan_cost_amount) as plan_cost_amount ,
		sum(ss.act_workload) as act_workload ,
		sum(ss.act_cost_amount) as act_cost_amount ,
		sum(ifnull(ss.finish_rate,0) * ifnull(ss.plan_workload,0)) as plan_workload_rate,
		sum(ss.task_cnt) as task_cnt ,
		sum(ss.finish_task_cnt) as finish_task_cnt ,
		sum(ss.project_cnt) as project_cnt ,
		sum(ss.iteration_cnt) as iteration_cnt ,
		sum(ss.test_cases) as test_cases ,
		sum(ss.exec_cases) as exec_cases ,
		sum(ss.design_cases) as design_cases ,
		sum(ss.finish_cases) as finish_cases ,
		sum(ss.bug_cnt) as bug_cnt ,
		sum(ss.active_bugs) as active_bugs ,
		sum(ss.confirmed_bugs) as confirmed_bugs ,
		sum(ss.resolved_bugs) as resolved_bugs ,
		sum(ss.closed_bugs) as closed_bugs
		from xm_menu_state ss inner join xm_menu m on ss.menu_id=m.menu_id   where m.pmenu_id in
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>

		group by m.pmenu_id) s2 on s2.pmenu_id=s.menu_id inner join xm_menu xm on xm.menu_id=s.menu_id
		set s.plan_workload=ifnull(s2.plan_workload,0),
		s.plan_cost_amount=ifnull(s2.plan_cost_amount,0),
		s.act_workload=ifnull(s2.act_workload,0),
		s.act_cost_amount=ifnull(s2.act_cost_amount,0),
		s.finish_rate=if(s2.plan_workload is null or s2.plan_workload=0,0,s2.plan_workload_rate/s2.plan_workload),
		s.task_cnt=ifnull(s2.task_cnt,0),
		s.finish_task_cnt=ifnull(s2.finish_task_cnt,0),
		s.project_cnt=ifnull(s2.project_cnt,0),
		s.iteration_cnt=ifnull(s2.iteration_cnt,0),

		s.test_cases=ifnull(s2.test_cases,0),
		s.exec_cases=ifnull(s2.exec_cases,0),
		s.design_cases=ifnull(s2.design_cases,0),
		s.finish_cases=ifnull(s2.finish_cases,0),

		s.bug_cnt=ifnull(s2.bug_cnt,0),
		s.active_bugs=ifnull(s2.active_bugs,0),
		s.confirmed_bugs=ifnull(s2.confirmed_bugs,0),
		s.resolved_bugs=ifnull(s2.resolved_bugs,0),
		s.closed_bugs=ifnull(s2.closed_bugs,0),
		xm.children_cnt=ifnull(s2.children_cnt,0)
		where s.menu_id in
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</update>
	<!-- 适合父子关系的一批任务的更新 -->
	<update id="sumParents" parameterType="List">
		<foreach collection="list" item="item" index="index" open="" separator=";" close="" >
			update xm_menu_state s  left join
			(select m.pmenu_id,
			sum(1) as children_cnt,
			sum(ss.plan_workload) as plan_workload ,
			sum(ss.plan_cost_amount) as plan_cost_amount ,
			sum(ss.act_workload) as act_workload ,
			sum(ss.act_cost_amount) as act_cost_amount ,
			sum(ifnull(ss.finish_rate,0) * ifnull(ss.plan_workload,0)) as  plan_workload_rate,
			sum(ss.task_cnt) as task_cnt ,
			sum(ss.finish_task_cnt) as finish_task_cnt ,
			sum(ss.project_cnt) as project_cnt ,
			sum(ss.iteration_cnt) as iteration_cnt ,
			sum(ss.test_cases) as test_cases ,
			sum(ss.exec_cases) as exec_cases ,
			sum(ss.design_cases) as design_cases ,
			sum(ss.finish_cases) as finish_cases ,
			sum(ss.bug_cnt) as bug_cnt ,
			sum(ss.active_bugs) as active_bugs ,
			sum(ss.confirmed_bugs) as confirmed_bugs ,
			sum(ss.resolved_bugs) as resolved_bugs ,
			sum(ss.closed_bugs) as closed_bugs
			from xm_menu_state ss inner join xm_menu m on ss.menu_id=m.menu_id   where m.pmenu_id =#{item}

			group by m.pmenu_id) s2 on s2.pmenu_id=s.menu_id inner join xm_menu xm on s.menu_id=xm.menu_id
			set s.plan_workload=ifnull(s2.plan_workload,0),
			s.plan_cost_amount=ifnull(s2.plan_cost_amount,0),
			s.act_workload=ifnull(s2.act_workload,0),
			s.act_cost_amount=ifnull(s2.act_cost_amount,0),
 			s.finish_rate=if(s2.plan_workload is null or s2.plan_workload=0,0,s2.plan_workload_rate/s2.plan_workload),
			s.task_cnt=ifnull(s2.task_cnt,0),
			s.finish_task_cnt=ifnull(s2.finish_task_cnt,0),
			s.project_cnt=ifnull(s2.project_cnt,0),
			s.iteration_cnt=ifnull(s2.iteration_cnt,0),

			s.test_cases=ifnull(s2.test_cases,0),
			s.exec_cases=ifnull(s2.exec_cases,0),
			s.design_cases=ifnull(s2.design_cases,0),
			s.finish_cases=ifnull(s2.finish_cases,0),

			s.bug_cnt=ifnull(s2.bug_cnt,0),
			s.active_bugs=ifnull(s2.active_bugs,0),
			s.confirmed_bugs=ifnull(s2.confirmed_bugs,0),
			s.resolved_bugs=ifnull(s2.resolved_bugs,0),
			s.closed_bugs=ifnull(s2.closed_bugs,0),
			xm.children_cnt=ifnull(s2.children_cnt,0)
			where s.menu_id = #{item}
		</foreach>
	</update>
	<insert id="batchLoadXmMenuToState" parameterType="HashMap">
		insert into xm_menu_state (product_id,menu_id,biz_date) select i.product_id,i.menu_id,#{bizDate} from xm_menu i left join xm_menu_state s on s.product_id=i.product_id and s.menu_id=i.menu_id  where i.product_id=#{productId}  and s.menu_id is null
	</insert>
	<!--结束 自定义sql函数区域-->
	

	
	<!-- 通过条件查询获取数据列表 返回list<map> -->
	<select id="selectListMapByWhere" parameterType="HashMap" resultType="HashMap">
		select * from xm_menu_state res
		<where>
		    <include refid="whereForMap"/>
			<include refid="where"/>
		</where>
	</select>
	
	<!-- 通过条件查询获取数据列表 不分页 返回 list<Object> -->
	<select id="selectListByWhere" parameterType="com.xm.core.entity.XmMenuState" resultType="com.xm.core.entity.XmMenuState">
		select * from xm_menu_state res
		<where>
			<include refid="where"/>
		</where>
	</select>
	
		<!-- 通过主键查询获取数据对象 返回object -->
	<select id="selectOneObject" parameterType="com.xm.core.entity.XmMenuState" resultType="com.xm.core.entity.XmMenuState">
		select * from xm_menu_state res
		where 
			res.menu_id = #{menuId}
	</select>
    <select id="selectListByIds" parameterType="List" resultType="com.xm.core.entity.XmMenuState">
        select * from xm_menu_state res
        where  (res.menu_id) in
             <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                 ( #{item})
             </foreach>
    </select>
	<!-- 通过主键查询获取数据对象 返回map-->
	<select id="selectOneMap" parameterType="HashMap" resultType="HashMap">
		select * from xm_menu_state res
		where 
			 res.menu_id = #{menuId}
	</select>
	<!-- 获取数据条目 返回long -->
	<select id="countByWhere" parameterType="com.xm.core.entity.XmMenuState" resultType="long">
		select count(1) from xm_menu_state res
		<where>
			<include refid="where"/>
		</where>
	</select>
	<!-- 新增一条记录  主键menu_id,-->
	<insert id="insert" parameterType="com.xm.core.entity.XmMenuState" useGeneratedKeys="false"   keyProperty="menu_id">
		insert into xm_menu_state(
			<include refid="columns"/>
		) values (
		#{menuId},#{planStartTime},#{planEndTime},#{actStartTime},#{actEndTime},#{planWorkload},#{actWorkload},#{planCostAmount},#{actCostAmount},#{finishRate},#{demandRate},#{designRate},#{devRate},#{uatRate},#{sitRate},#{onlineStatus},#{onlineTime},#{planStatus},#{chargeUserid},#{chargeUsername},#{menuStatus},#{ctime},#{ltime},#{cuserid},#{cusername},#{calcTime},#{menuName},#{planWorkhours},#{planWorkerCnt},#{closedBugs},#{activeBugs},#{confirmedBugs},#{resolvedBugs},#{productId},#{productName},#{testCases},#{execCases},#{designCases},#{finishCases},#{projectCnt},#{iterationCnt},#{taskCnt},#{finishTaskCnt},#{bizDate},#{bugCnt}
		)
	</insert>
	
	<!-- 按条件删除若干条记录-->
	<delete id="deleteByWhere" parameterType="com.xm.core.entity.XmMenuState">
		delete from xm_menu_state res
		<where>  
			<include refid="where"/>
		</where>
	</delete>
	
	<!-- 按主键删除一条记录-->
	<delete id="deleteByPk" parameterType="com.xm.core.entity.XmMenuState">
		delete from xm_menu_state 
		where menu_id = #{menuId} 
	</delete>
	
	<!-- 根据条件修改若干条记录 -->
	<update id="updateSomeFieldByPk" parameterType="com.xm.core.entity.XmMenuState">
		update  xm_menu_state 
		<set>
			<include refid="someFieldSet"/>
		</set>
		where menu_id = #{menuId} 
	</update>
	
		<!-- 根据主键修改一条记录 -->
	<update id="updateByPk" parameterType="com.xm.core.entity.XmMenuState">
		update  xm_menu_state 
		<set>
			<include refid="set"/>
		</set>
		where menu_id = #{menuId} 
	</update>

	<!-- 批量新增  批量插入 借用insert 循环插入实现
	<insert id="batchInsert" parameterType="List">
 	</insert>
 	-->
 	
	<!-- 批量更新 -->
	<update id="batchUpdate" parameterType="List">   
		<foreach collection="list" item="item" index="index" separator=";" >
   		update  xm_menu_state 
		set 
			<include refid="batchSet"/>
			where menu_id = #{item.menuId}  
		</foreach> 
	</update>
	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="List">  
		delete from xm_menu_state 
			where
			(menu_id) in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
                    (  #{item.menuId} )
                </foreach>
	</delete>
	
	
	<!--sql片段 列-->
	<sql id="columns">
		menu_id,plan_start_time,plan_end_time,act_start_time,act_end_time,plan_workload,act_workload,plan_cost_amount,act_cost_amount,finish_rate,demand_rate,design_rate,dev_rate,uat_rate,sit_rate,online_status,online_time,plan_status,charge_userid,charge_username,menu_status,ctime,ltime,cuserid,cusername,calc_time,menu_name,plan_workhours,plan_worker_cnt,closed_bugs,active_bugs,confirmed_bugs,resolved_bugs,product_id,product_name,test_cases,exec_cases,design_cases,finish_cases,project_cnt,iteration_cnt,task_cnt,finish_task_cnt,biz_date,bug_cnt
	</sql>

	<!--sql片段 动态条件 YYYY-MM-DD HH24:MI:SS-->
	<sql id="where">
		<if test="menuId != null and menuId != ''">      and res.menu_id = #{menuId}     </if>
		<if test="planStartTime != null">      and date_format(res.plan_start_time,'%Y-%m-%d') = date_format(#{planStartTime},'%Y-%m-%d')     </if>
		<if test="planEndTime != null">      and date_format(res.plan_end_time,'%Y-%m-%d') = date_format(#{planEndTime},'%Y-%m-%d')     </if>
		<if test="actStartTime != null">      and date_format(res.act_start_time,'%Y-%m-%d') = date_format(#{actStartTime},'%Y-%m-%d')     </if>
		<if test="actEndTime != null">      and date_format(res.act_end_time,'%Y-%m-%d') = date_format(#{actEndTime},'%Y-%m-%d')     </if>
		<if test="planWorkload != null and planWorkload != ''">      and res.plan_workload = #{planWorkload}     </if>
		<if test="actWorkload != null and actWorkload != ''">      and res.act_workload = #{actWorkload}     </if>
		<if test="planCostAmount != null and planCostAmount != ''">      and res.plan_cost_amount = #{planCostAmount}     </if>
		<if test="actCostAmount != null and actCostAmount != ''">      and res.act_cost_amount = #{actCostAmount}     </if>
		<if test="finishRate != null and finishRate != ''">      and res.finish_rate = #{finishRate}     </if>
		<if test="demandRate != null and demandRate != ''">      and res.demand_rate = #{demandRate}     </if>
		<if test="designRate != null and designRate != ''">      and res.design_rate = #{designRate}     </if>
		<if test="devRate != null and devRate != ''">      and res.dev_rate = #{devRate}     </if>
		<if test="uatRate != null and uatRate != ''">      and res.uat_rate = #{uatRate}     </if>
		<if test="sitRate != null and sitRate != ''">      and res.sit_rate = #{sitRate}     </if>
		<if test="onlineStatus != null and onlineStatus != ''">      and res.online_status = #{onlineStatus}     </if>
		<if test="onlineTime != null">      and date_format(res.online_time,'%Y-%m-%d') = date_format(#{onlineTime},'%Y-%m-%d')     </if>
		<if test="planStatus != null and planStatus != ''">      and res.plan_status = #{planStatus}     </if>
		<if test="chargeUserid != null and chargeUserid != ''">      and res.charge_userid = #{chargeUserid}     </if>
		<if test="chargeUsername != null and chargeUsername != ''">      and res.charge_username = #{chargeUsername}     </if>
		<if test="menuStatus != null and menuStatus != ''">      and res.menu_status = #{menuStatus}     </if>
		<if test="ctime != null">      and date_format(res.ctime,'%Y-%m-%d') = date_format(#{ctime},'%Y-%m-%d')     </if>
		<if test="ltime != null">      and date_format(res.ltime,'%Y-%m-%d') = date_format(#{ltime},'%Y-%m-%d')     </if>
		<if test="cuserid != null and cuserid != ''">      and res.cuserid = #{cuserid}     </if>
		<if test="cusername != null and cusername != ''">      and res.cusername = #{cusername}     </if>
		<if test="calcTime != null">      and date_format(res.calc_time,'%Y-%m-%d') = date_format(#{calcTime},'%Y-%m-%d')     </if>
		<if test="menuName != null and menuName != ''">      and res.menu_name = #{menuName}     </if>
		<if test="planWorkhours != null and planWorkhours != ''">      and res.plan_workhours = #{planWorkhours}     </if>
		<if test="planWorkerCnt != null and planWorkerCnt != ''">      and res.plan_worker_cnt = #{planWorkerCnt}     </if>
		<if test="closedBugs != null and closedBugs != ''">      and res.closed_bugs = #{closedBugs}     </if>
		<if test="activeBugs != null and activeBugs != ''">      and res.active_bugs = #{activeBugs}     </if>
		<if test="confirmedBugs != null and confirmedBugs != ''">      and res.confirmed_bugs = #{confirmedBugs}     </if>
		<if test="resolvedBugs != null and resolvedBugs != ''">      and res.resolved_bugs = #{resolvedBugs}     </if>
		<if test="productId != null and productId != ''">      and res.product_id = #{productId}     </if>
		<if test="productName != null and productName != ''">      and res.product_name = #{productName}     </if>
		<if test="testCases != null and testCases != ''">      and res.test_cases = #{testCases}     </if>
		<if test="execCases != null and execCases != ''">      and res.exec_cases = #{execCases}     </if>
		<if test="designCases != null and designCases != ''">      and res.design_cases = #{designCases}     </if>
		<if test="finishCases != null and finishCases != ''">      and res.finish_cases = #{finishCases}     </if>
		<if test="projectCnt != null and projectCnt != ''">      and res.project_cnt = #{projectCnt}     </if>
		<if test="iterationCnt != null and iterationCnt != ''">      and res.iteration_cnt = #{iterationCnt}     </if>
		<if test="taskCnt != null and taskCnt != ''">      and res.task_cnt = #{taskCnt}     </if>
		<if test="finishTaskCnt != null and finishTaskCnt != ''">      and res.finish_task_cnt = #{finishTaskCnt}     </if>
		<if test="bizDate != null and bizDate != ''">      and res.biz_date = #{bizDate}     </if>
		<if test="bugCnt != null and bugCnt != ''">      and res.bug_cnt = #{bugCnt}     </if>
	</sql>
	<!--sql片段 更新字段 -->
	<sql id="set">
		plan_start_time = #{planStartTime},
		plan_end_time = #{planEndTime},
		act_start_time = #{actStartTime},
		act_end_time = #{actEndTime},
		plan_workload = #{planWorkload},
		act_workload = #{actWorkload},
		plan_cost_amount = #{planCostAmount},
		act_cost_amount = #{actCostAmount},
		finish_rate = #{finishRate},
		demand_rate = #{demandRate},
		design_rate = #{designRate},
		dev_rate = #{devRate},
		uat_rate = #{uatRate},
		sit_rate = #{sitRate},
		online_status = #{onlineStatus},
		online_time = #{onlineTime},
		plan_status = #{planStatus},
		charge_userid = #{chargeUserid},
		charge_username = #{chargeUsername},
		menu_status = #{menuStatus},
		ctime = #{ctime},
		ltime = #{ltime},
		cuserid = #{cuserid},
		cusername = #{cusername},
		calc_time = #{calcTime},
		menu_name = #{menuName},
		plan_workhours = #{planWorkhours},
		plan_worker_cnt = #{planWorkerCnt},
		closed_bugs = #{closedBugs},
		active_bugs = #{activeBugs},
		confirmed_bugs = #{confirmedBugs},
		resolved_bugs = #{resolvedBugs},
		product_id = #{productId},
		product_name = #{productName},
		test_cases = #{testCases},
		exec_cases = #{execCases},
		design_cases = #{designCases},
		finish_cases = #{finishCases},
		project_cnt = #{projectCnt},
		iteration_cnt = #{iterationCnt},
		task_cnt = #{taskCnt},
		finish_task_cnt = #{finishTaskCnt},
		biz_date = #{bizDate},
		bug_cnt = #{bugCnt}
	</sql>
	<sql id="someFieldSet">
		<if test="planStartTime != null"> plan_start_time = #{planStartTime},     </if>
		<if test="planEndTime != null"> plan_end_time = #{planEndTime},     </if>
		<if test="actStartTime != null"> act_start_time = #{actStartTime},     </if>
		<if test="actEndTime != null"> act_end_time = #{actEndTime},     </if>
		<if test="planWorkload != null and planWorkload != ''"> plan_workload = #{planWorkload},     </if>
		<if test="actWorkload != null and actWorkload != ''"> act_workload = #{actWorkload},     </if>
		<if test="planCostAmount != null and planCostAmount != ''"> plan_cost_amount = #{planCostAmount},     </if>
		<if test="actCostAmount != null and actCostAmount != ''"> act_cost_amount = #{actCostAmount},     </if>
		<if test="finishRate != null and finishRate != ''"> finish_rate = #{finishRate},     </if>
		<if test="demandRate != null and demandRate != ''"> demand_rate = #{demandRate},     </if>
		<if test="designRate != null and designRate != ''"> design_rate = #{designRate},     </if>
		<if test="devRate != null and devRate != ''"> dev_rate = #{devRate},     </if>
		<if test="uatRate != null and uatRate != ''"> uat_rate = #{uatRate},     </if>
		<if test="sitRate != null and sitRate != ''"> sit_rate = #{sitRate},     </if>
		<if test="onlineStatus != null and onlineStatus != ''"> online_status = #{onlineStatus},     </if>
		<if test="onlineTime != null"> online_time = #{onlineTime},     </if>
		<if test="planStatus != null and planStatus != ''"> plan_status = #{planStatus},     </if>
		<if test="chargeUserid != null and chargeUserid != ''"> charge_userid = #{chargeUserid},     </if>
		<if test="chargeUsername != null and chargeUsername != ''"> charge_username = #{chargeUsername},     </if>
		<if test="menuStatus != null and menuStatus != ''"> menu_status = #{menuStatus},     </if>
		<if test="ctime != null"> ctime = #{ctime},     </if>
		<if test="ltime != null"> ltime = #{ltime},     </if>
		<if test="cuserid != null and cuserid != ''"> cuserid = #{cuserid},     </if>
		<if test="cusername != null and cusername != ''"> cusername = #{cusername},     </if>
		<if test="calcTime != null"> calc_time = #{calcTime},     </if>
		<if test="menuName != null and menuName != ''"> menu_name = #{menuName},     </if>
		<if test="planWorkhours != null and planWorkhours != ''"> plan_workhours = #{planWorkhours},     </if>
		<if test="planWorkerCnt != null and planWorkerCnt != ''"> plan_worker_cnt = #{planWorkerCnt},     </if>
		<if test="closedBugs != null and closedBugs != ''"> closed_bugs = #{closedBugs},     </if>
		<if test="activeBugs != null and activeBugs != ''"> active_bugs = #{activeBugs},     </if>
		<if test="confirmedBugs != null and confirmedBugs != ''"> confirmed_bugs = #{confirmedBugs},     </if>
		<if test="resolvedBugs != null and resolvedBugs != ''"> resolved_bugs = #{resolvedBugs},     </if>
		<if test="productId != null and productId != ''"> product_id = #{productId},     </if>
		<if test="productName != null and productName != ''"> product_name = #{productName},     </if>
		<if test="testCases != null and testCases != ''"> test_cases = #{testCases},     </if>
		<if test="execCases != null and execCases != ''"> exec_cases = #{execCases},     </if>
		<if test="designCases != null and designCases != ''"> design_cases = #{designCases},     </if>
		<if test="finishCases != null and finishCases != ''"> finish_cases = #{finishCases},     </if>
		<if test="projectCnt != null and projectCnt != ''"> project_cnt = #{projectCnt},     </if>
		<if test="iterationCnt != null and iterationCnt != ''"> iteration_cnt = #{iterationCnt},     </if>
		<if test="taskCnt != null and taskCnt != ''"> task_cnt = #{taskCnt},     </if>
		<if test="finishTaskCnt != null and finishTaskCnt != ''"> finish_task_cnt = #{finishTaskCnt},     </if>
		<if test="bizDate != null and bizDate != ''"> biz_date = #{bizDate},     </if>
		<if test="bugCnt != null and bugCnt != ''"> bug_cnt = #{bugCnt},     </if>
	</sql>
	<!--sql片段 批量更新 -->
	<sql id="batchSet">
			plan_start_time = #{item.planStartTime},
			plan_end_time = #{item.planEndTime},
			act_start_time = #{item.actStartTime},
			act_end_time = #{item.actEndTime},
			plan_workload = #{item.planWorkload},
			act_workload = #{item.actWorkload},
			plan_cost_amount = #{item.planCostAmount},
			act_cost_amount = #{item.actCostAmount},
			finish_rate = #{item.finishRate},
			demand_rate = #{item.demandRate},
			design_rate = #{item.designRate},
			dev_rate = #{item.devRate},
			uat_rate = #{item.uatRate},
			sit_rate = #{item.sitRate},
			online_status = #{item.onlineStatus},
			online_time = #{item.onlineTime},
			plan_status = #{item.planStatus},
			charge_userid = #{item.chargeUserid},
			charge_username = #{item.chargeUsername},
			menu_status = #{item.menuStatus},
			ctime = #{item.ctime},
			ltime = #{item.ltime},
			cuserid = #{item.cuserid},
			cusername = #{item.cusername},
			calc_time = #{item.calcTime},
			menu_name = #{item.menuName},
			plan_workhours = #{item.planWorkhours},
			plan_worker_cnt = #{item.planWorkerCnt},
			closed_bugs = #{item.closedBugs},
			active_bugs = #{item.activeBugs},
			confirmed_bugs = #{item.confirmedBugs},
			resolved_bugs = #{item.resolvedBugs},
			product_id = #{item.productId},
			product_name = #{item.productName},
			test_cases = #{item.testCases},
			exec_cases = #{item.execCases},
			design_cases = #{item.designCases},
			finish_cases = #{item.finishCases},
			project_cnt = #{item.projectCnt},
			iteration_cnt = #{item.iterationCnt},
			task_cnt = #{item.taskCnt},
			finish_task_cnt = #{item.finishTaskCnt},
			biz_date = #{item.bizDate},
			bug_cnt = #{item.bugCnt}
	</sql>
</mapper>